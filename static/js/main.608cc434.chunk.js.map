{"version":3,"sources":["store/actions/index.js","store/actions/boardActions.js","store/actions/currentBoardActions.js","store/actions/tasks.js","store/reducers/initialState.js","store/reducers/boardsReducer.js","store/reducers/currentBoardReducer.js","store/reducers/rootReducer.js","store/store.js","store/actionCreators/boardActionCreators.js","store/actionCreators/taskActionCreators.js","common/Container.js","common/Title.js","common/Modal.js","common/Color.js","common/Button.js","components/BoardOptions.js","common/BtnToggle.js","common/DropDownList.js","components/Menu.js","common/Column.js","common/Task.js","common/BtnModal.js","components/ListTasks.js","common/AddTask/Button.js","common/AddTask/AddTask.js","components/Days.js","components/Works.js","components/Board.js","common/BoardItem.js","components/ListBoards.js","components/UserBoards.js","App.js","index.js"],"names":["board","ADD_BOARD","DELETE_BOARD","CHOOSE_BOARD","currentBoard","CHANGE_TASK","ADD_TASK_TO_DAY","ADD_TASK_TO_STAGE","ADD_TASK_TO_COMPLETED","ADD_TASK_TO_UNFULFILLED","UPDATE_TASK_ORDER_IN_COLUMN","tasks","boards","addingBoard","state","payload","deletingBoard","filter","title","color","choosingBoard","changingTask","newCurrentBoard","Object","assign","place","section","index","newTask","addingTaskToDay","day","task","days","push","addingTaskToStage","stage","works","addingTaskToMenuLists","list","splice","timeNow","year","Date","getFullYear","month","getMonth","monthDay","getDate","weekDay","getDay","hours","getHours","minutes","getMinutes","returnTimeNow","completedTasks","Error","unfulfilledTasks","error","console","updatingTaskOrderInColumn","draggedTaskArr","changeableTaskArr","combineReducers","initialState","action","boardActions","actions","type","currentBoardActions","store","createStore","rootReducer","key","taskActions","arr","containerStyles","minHeight","padding","display","flexDirection","alignItems","border","borderRadius","boxShadow","background","Container","children","style","Title","underline","size","margin","fontSize","textDecoration","modalStyles","position","top","left","width","height","justifyContent","visibility","opacity","backgroundColor","transition","Modal","visible","backdropFilter","Color","props","startHover","setState","hover","endHover","colorStyles","this","onMouseMove","onMouseLeave","onClick","setColor","transform","React","Component","buttonStyle","static","Button","arrFunctions","map","func","block","pointerEvents","optionsContainerStyles","maxWidth","inputStyles","marginTop","focus","colorsContainer","flexWrap","colors","BoardOptions","setTitle","startInputFocus","inputFocus","endInputFocus","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","ToDo","Doing","Done","onFocus","onBlur","event","target","value","placeholder","marginRight","marginBottom","marginLeft","overflowX","overflowY","createBoard","toggleOptions","worningVisible","textAlign","toggleModalWorning","btnToggleStyles","active","BtnToggle","forEach","dropDownListStyles","toggleBtnStyles","listStyles","itemStyles","overflow","magnifierIcon","fill","version","xmlns","x","y","viewBox","d","DropDownList","toggleListVisible","listVisible","name","listTask","taskItem","flex","toggleTaskModal","cursor","menuStyles","zIndex","paddingTop","Menu","selectedTask","borderBottom","columnStyles","Column","toggleHideColumn","hide","minWidth","borderColor","taskWrapperStyles","btnStyles","Task","openTaskModal","dragStartHandler","dragLeaveHandler","dragEndHandler","dragOverHandler","dropHandler","onDragStart","onDragLeave","onDragEnd","onDragOver","onDrop","draggable","btnModalStyles","BtnModal","wrapperModalContentStyles","gridTemplateColumns","gridTemplateRows","taskModalFieldStyles","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","resize","ListTasks","changeCurrentTaskText","text","currentText","taskArr","preventDefault","log","taskText","visibleTaskModal","currentIndex","closeTaskModal","currentTaskArr","onChange","changeTask","borderTopRightRadius","addTaskToCompleted","borderBottomRightRadius","addTaskToUnfulfilled","fieldStyles","btnPlusTaskStyles","AddTask","setTaskText","toggleShowField","showField","addTaskStyles","addTask","daysColumnsStyles","daysOfWeek","Days","taskIndex","updateTaskOrderInColumn","addTaskToDay","worksColumnsStyles","workStages","Works","addTaskToStage","svgLeftArrow","heigh","Board","setVisibleDays","bool","daysVisible","toggleVisibleMenu","menuVisible","className","backToBoards","paddingLeft","boardItemStyles","BoardItem","startItemHover","boardItemHover","endItemHover","onMouseEnter","destroyMode","deleteBoard","item","openBoard","hidden","listHeaderStyles","boardsListStyles","ListBoards","toggleDestroyMode","length","UserBoards","optionsVisible","newBoard","coincidence","addBoard","removeBoard","chooseBoard","warningVisible","connect","dispatch","boardAC","array","taskAC","taskObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.608cc434.chunk.js","sourcesContent":["import board from './boardActions';\nimport currentBoard from './currentBoardActions';\nimport tasks from './tasks';\n\nexport default {\n  board,\n  currentBoard,\n  tasks,\n};\n","const ADD_BOARD = 'ADD_BOARD';\nconst DELETE_BOARD = 'DELETE_BOARD';\nconst CHOOSE_BOARD = 'CHOOSE_BOARD';\n\nexport default {\n  ADD_BOARD,\n  DELETE_BOARD,\n  CHOOSE_BOARD,\n};\n","const CHANGE_TASK = 'CHANGE_TASK';\nconst ADD_TASK_TO_DAY = 'ADD_TASK_TO_DAY';\nconst ADD_TASK_TO_STAGE = 'ADD_TASK_TO_STAGE';\nconst ADD_TASK_TO_COMPLETED = 'ADD_TASK_TO_COMPLETED';\nconst ADD_TASK_TO_UNFULFILLED = 'ADD_TASK_TO_UNFULFILLED';\nconst UPDATE_TASK_ORDER_IN_COLUMN = 'UPDATE_TASK_ORDER_IN_COLUMN';\n\nexport default {\n  CHANGE_TASK,\n  ADD_TASK_TO_DAY,\n  ADD_TASK_TO_STAGE,\n  ADD_TASK_TO_COMPLETED,\n  ADD_TASK_TO_UNFULFILLED,\n  UPDATE_TASK_ORDER_IN_COLUMN,\n};\n","export default {};\n","/*\n * Store struct\n * {\n *   boards: [],\n *   currentBoard: {\n *     title: string,\n *     color: string,\n *     completedTasks: array,\n *     unfulfilledTasks: array,\n *     days: {\n *         Monday: array,\n *         Tuesday: array,\n *         Wednesday: array,\n *         Thursday: array,\n *         Friday: array,\n *         Saturday: array,\n *         Sunday: array,\n *     },\n *     works: {\n *       ToDo: array,\n *       Doing: array,\n *       Done: array,\n *     },\n *   }\n * }\n */\n\nexport default {\n  boards: [],\n  currentBoard: {},\n};\n","import actions from '../actions/index';\nimport initialState from './initialState';\n\nexport default function boardsReducer(state = initialState.boards, action) {\n  const boardActions = actions.board;\n\n  switch (action.type) {\n    case boardActions.ADD_BOARD:\n      return addingBoard(state, action.payload);\n    case boardActions.DELETE_BOARD:\n      return deletingBoard(state, action.payload);\n    case boardActions.CHOOSE_BOARD:\n      return choosingBoard(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction addingBoard(state, payload) {\n  return {\n    ...state,\n    boards: [...state.boards, payload],\n  };\n}\n\nfunction deletingBoard(state, payload) {\n  return {\n    ...state,\n    boards: state.boards.filter((board) => {\n      return board.title + board.color !== payload;\n    }),\n  };\n}\n\nfunction choosingBoard(state, payload) {\n  return {\n    ...state,\n    currentBoard: state.boards[payload],\n  };\n}\n","import actions from '../actions/index';\nimport initialState from './initialState';\n\nexport default function currentBoardReducer(\n  state = initialState.currentBoard,\n  action\n) {\n  const currentBoardActions = actions.currentBoard;\n  const currentBoardStruct = {\n    title: 'Title',\n    color: 'white',\n    completedTasks: [],\n    unfulfilledTasks: [],\n    days: {\n      Monday: [],\n      Tuesday: [],\n      Wednesday: [],\n      Thursday: [],\n      Friday: [],\n      Saturday: [],\n      Sunday: [],\n    },\n    works: {\n      ToDo: [],\n      Doing: [],\n      Done: [],\n    },\n  };\n\n  switch (action.type) {\n    case currentBoardActions.CHANGE_TASK:\n      return changingTask(state, action.payload);\n    case currentBoardActions.ADD_TASK_TO_DAY:\n      return addingTaskToDay(state, action.payload);\n    case currentBoardActions.ADD_TASK_TO_STAGE:\n      return addingTaskToStage(state, action.payload);\n    case currentBoardActions.ADD_TASK_TO_COMPLETED:\n      return addingTaskToMenuLists('completed', state, action.payload);\n    case currentBoardActions.ADD_TASK_TO_UNFULFILLED:\n      return addingTaskToMenuLists('unfulfilled', state, action.payload);\n    case currentBoardActions.UPDATE_TASK_ORDER_IN_COLUMN:\n      return updatingTaskOrderInColumn(state, action.payload);\n    default:\n      return state;\n  }\n}\n\nfunction changingTask(state, payload) {\n  const newCurrentBoard = Object.assign(state.currentBoard);\n  const [place, section, index, newTask] = payload;\n\n  newCurrentBoard[place][section][index] = newTask;\n\n  return {\n    boards: [...state.boards],\n    currentBoard: { ...newCurrentBoard },\n  };\n}\n\nfunction addingTaskToDay(state, payload) {\n  const newCurrentBoard = Object.assign(state.currentBoard);\n  const [day, task] = payload;\n\n  newCurrentBoard.days[day].push(task);\n\n  return {\n    boards: [...state.boards],\n    currentBoard: { ...newCurrentBoard },\n  };\n}\n\nfunction addingTaskToStage(state, payload) {\n  const newCurrentBoard = Object.assign(state.currentBoard);\n  const [stage, task] = payload;\n\n  newCurrentBoard.works[stage].push(task);\n\n  return {\n    boards: [...state.boards],\n    currentBoard: { ...newCurrentBoard },\n  };\n}\n\n/**\n * @param  {string} list\n * @param  {object} state\n * @param  {array} payload\n */\nfunction addingTaskToMenuLists(list, state, payload) {\n  const newCurrentBoard = Object.assign(state.currentBoard);\n  const [place, section, index, task] = payload;\n\n  newCurrentBoard[place][section].splice(index, 1);\n  const timeNow = returnTimeNow();\n\n  try {\n    if (list === 'completed') {\n      newCurrentBoard.completedTasks.push([task, timeNow]);\n    } else if (list === 'unfulfilled') {\n      newCurrentBoard.unfulfilledTasks.push([task, timeNow]);\n    } else {\n      throw new Error('Error on adding task in menu lists');\n    }\n  } catch (error) {\n    console.error(error);\n  }\n\n  return {\n    boards: [...state.boards],\n    currentBoard: { ...newCurrentBoard },\n  };\n}\n\nfunction returnTimeNow() {\n  const year = new Date().getFullYear();\n  const month = new Date().getMonth() + 1;\n  const monthDay = new Date().getDate();\n  const weekDay = [\n    'Monday',\n    'Tuesday',\n    'Wednesday',\n    'Thursday',\n    'Friday',\n    'Saturday',\n    'Sunday',\n  ][new Date().getDay()];\n  const hours = new Date().getHours();\n  const minutes = new Date().getMinutes();\n\n  return `${year}.${month}.${monthDay} - ${weekDay} - ${hours}:${minutes}`;\n}\n\nfunction updatingTaskOrderInColumn(state, payload) {\n  const newCurrentBoard = Object.assign(state.currentBoard);\n  const { draggedTaskArr, changeableTaskArr } = payload;\n\n  // TODO: changed array in current border\n  // const [draggedIndex, draggedTask] = draggedTaskArr;\n  // const [changeabledIndex, changeabledTask] = changeableTaskArr;\n\n  return {\n    boards: [...state.boards],\n    currentBoard: { ...newCurrentBoard },\n  };\n}\n","import { combineReducers } from 'redux';\n\nimport boardsReducer from './boardsReducer';\nimport currentBoardReducer from './currentBoardReducer';\n\nexport default combineReducers({\n  boards: boardsReducer,\n  currentBoard: currentBoardReducer,\n});\n","import { createStore } from 'redux';\nimport rootReducer from './reducers/rootReducer';\n\nconst store = createStore(rootReducer);\n\nexport default store;\n","import actions from '../actions/index';\n\nconst boardActions = actions.board;\n\nconst addBoard = (board) => {\n  return {\n    type: boardActions.ADD_BOARD,\n    payload: board,\n  };\n};\n\nconst removeBoard = (key) => {\n  return {\n    type: boardActions.DELETE_BOARD,\n    payload: key,\n  };\n};\n\nconst chooseBoard = (index) => {\n  return {\n    type: boardActions.CHOOSE_BOARD,\n    payload: index,\n  };\n};\n\nexport default {\n  addBoard,\n  removeBoard,\n  chooseBoard,\n};\n","import actions from '../actions/index';\n\nconst taskActions = actions.task;\n\nconst changeTask = (arr) => {\n  return {\n    type: taskActions.CHANGE_TASK,\n    payload: arr,\n  };\n};\n\nconst addTaskToDay = (day, task) => {\n  return {\n    type: taskActions.ADD_TASK_TO_DAY,\n    payload: [day, task],\n  };\n};\n\nconst addTaskToStage = (stage, task) => {\n  return {\n    type: taskActions.ADD_TASK_TO_STAGE,\n    payload: [stage, task],\n  };\n};\n\nconst addTaskToCompleted = (arr) => {\n  return {\n    type: taskActions.ADD_TASK_TO_COMPLETED,\n    payload: arr,\n  };\n};\n\nconst addTaskToUnfulfilled = (arr) => {\n  return {\n    type: taskActions.ADD_TASK_TO_UNFULFILLED,\n    payload: arr,\n  };\n};\n\nconst updateTaskOrderInColumn = (arr) => {\n  return {\n    type: taskActions.UPDATE_TASK_ORDER_IN_COLUMN,\n    payload: arr,\n  };\n};\n\nexport default {\n  changeTask,\n  addTaskToDay,\n  addTaskToStage,\n  addTaskToCompleted,\n  addTaskToUnfulfilled,\n  updateTaskOrderInColumn,\n};\n","import React from 'react';\n\nconst containerStyles = {\n  minHeight: '50vh',\n  padding: '3em',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'flex-start',\n  border: '.1em solid #222',\n  borderRadius: '.4em',\n  boxShadow: '0 .3em 1em #000',\n  background: '#030303',\n};\n\nexport default function Container({ children }) {\n  return <div style={containerStyles}>{children}</div>;\n}\n","import React from 'react';\n\nexport default function Title({ underline, padding, size, color, children }) {\n  return (\n    <h3\n      style={{\n        margin: '0',\n        padding: padding || '0',\n        fontSize: size || '1em',\n        textDecoration: underline && 'underline',\n        color: color || '#fff',\n      }}>\n      {children}\n    </h3>\n  );\n}\n","import React from 'react';\n\nconst modalStyles = {\n  position: 'absolute',\n  top: '0',\n  left: '0',\n  width: '100%',\n  height: '100%',\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  visibility: 'hidden',\n  opacity: '0',\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\n  transition: '.2s',\n};\n\nexport default function Modal({ visible, children }) {\n  return (\n    <div\n      style={\n        visible\n          ? {\n              ...modalStyles,\n              visibility: 'visible',\n              opacity: '1',\n            }\n          : modalStyles\n      }>\n      <div\n        style={{\n          padding: '1em',\n          display: 'flex',\n          flexDirection: 'column',\n          alignItems: 'center',\n          justifyContent: 'center',\n          borderRadius: '.4em',\n          backdropFilter: 'blur(0.3em)',\n        }}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\n\nexport default class Color extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n    };\n  }\n\n  render() {\n    const colorStyles = {\n      display: 'inline-block',\n      width: '3em',\n      height: '3em',\n      margin: '.3em',\n      border: 'none',\n      borderRadius: '.3em',\n      backgroundColor: this.props.color,\n      transition: '.25s',\n    };\n\n    return (\n      <button\n        onMouseMove={this.startHover}\n        onMouseLeave={this.endHover}\n        onClick={() => {\n          this.props.setColor(this.props.color);\n        }}\n        style={\n          this.state.hover\n            ? {\n                ...colorStyles,\n                transform: 'rotate(12deg) scale(0.9)',\n              }\n            : colorStyles\n        }></button>\n    );\n  }\n\n  startHover = () => {\n    this.setState({\n      hover: true,\n    });\n  };\n\n  endHover = () => {\n    this.setState({\n      hover: false,\n    });\n  };\n}\n","import React from 'react';\n\nconst buttonStyle = {\n  static: {\n    padding: '1em',\n    border: 'none',\n    borderRadius: '0.4em',\n    backgroundColor: '#111',\n    color: 'inherit',\n    transition: '0.2s',\n  },\n\n  hover: {\n    transform: 'translateY(-1px)',\n    boxShadow: '0 .5em .6em #000',\n    backgroundColor: '#222',\n  },\n};\n\nexport default class Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n    };\n  }\n\n  render() {\n    return (\n      <button\n        onMouseMove={this.startHover}\n        onMouseLeave={this.endHover}\n        onClick={() => {\n          this.props.arrFunctions.map((func) => func());\n        }}\n        style={\n          this.props.block\n            ? { ...buttonStyle.static, pointerEvents: 'none', opacity: '.4' }\n            : this.state.hover\n            ? { ...buttonStyle.static, ...buttonStyle.hover }\n            : buttonStyle.static\n        }>\n        {this.props.children}\n      </button>\n    );\n  }\n\n  startHover = () => {\n    this.setState({\n      hover: true,\n    });\n  };\n\n  endHover = () => {\n    this.setState({\n      hover: false,\n    });\n  };\n}\n","import React from 'react';\nimport Modal from '../common/Modal';\nimport Color from '../common/Color';\nimport Button from '../common/Button';\n\nconst optionsContainerStyles = {\n  maxWidth: '27em',\n  padding: '2em',\n  fontSize: '1.2em',\n  borderRadius: '0.4em',\n  border: '0.1em solid #555',\n  backgroundColor: '#030303',\n  transition: '0.2s',\n};\n\nconst inputStyles = {\n  static: {\n    width: '100%',\n    marginTop: '1em',\n    padding: '.6em',\n    border: 'none',\n    borderRadius: '.4em',\n    backgroundColor: '#111',\n    color: '#fff',\n    transition: '.1s',\n  },\n\n  focus: {\n    transform: 'translateY(-2px)',\n    boxShadow: '0 .4em .5em #000',\n  },\n};\n\nconst colorsContainer = {\n  width: '100%',\n  margin: '1.4em 0',\n  display: 'flex',\n  flexWrap: 'wrap',\n  justifyContent: 'space-between',\n  border: '.1em solid #222',\n  borderRadius: '0.4em',\n};\n\nconst colors = [\n  '#6f3e9e',\n  '#fc6456',\n  '#54f057',\n  '#567afc',\n  '#fffc31',\n  '#fcb156',\n  '#3ce8df',\n  '#f0549f',\n  '#fefefe',\n  '#1e5dfc',\n  '#787878',\n  '#afe854',\n];\n\nexport default class BoardOptions extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      board: {\n        title: 'Untitled',\n        color: '#fefefe',\n        completedTasks: [],\n        unfulfilledTasks: [],\n        days: {\n          Monday: [],\n          Tuesday: [],\n          Wednesday: [],\n          Thursday: [],\n          Friday: [],\n          Saturday: [],\n          Sunday: [],\n        },\n        works: {\n          ToDo: [],\n          Doing: [],\n          Done: [],\n        },\n      },\n      inputFocus: false,\n    };\n  }\n\n  render() {\n    return (\n      <div style={optionsContainerStyles}>\n        <input\n          style={\n            this.state.inputFocus\n              ? { ...inputStyles.static, ...inputStyles.focus }\n              : inputStyles.static\n          }\n          onFocus={this.startInputFocus}\n          onBlur={(event) => {\n            this.endInputFocus();\n            event.target.value\n              ? this.setTitle(event.target.value)\n              : this.setTitle('Untitled');\n          }}\n          placeholder='Write board title'></input>\n\n        <div style={colorsContainer}>\n          {colors.map((color, index) => {\n            return (\n              <Color\n                color={color}\n                setColor={this.setColor}\n                key={color + index}\n              />\n            );\n          })}\n        </div>\n\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\n          <div\n            style={{\n              marginRight: '7%',\n              display: 'flex',\n              alignItems: 'center',\n              marginBottom: '1em',\n            }}>\n            Color:{' '}\n            <span\n              style={{\n                display: 'inline-block',\n                width: '.9em',\n                height: '.9em',\n                marginLeft: '.6em',\n                borderRadius: '50%',\n                backgroundColor: this.state.board.color,\n              }}></span>\n          </div>\n          <div style={{ overflowX: 'auto', overflowY: 'hidden' }}>\n            Title: {this.state.board.title}\n          </div>\n        </div>\n\n        <div\n          style={{\n            marginTop: '.5em',\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'space-between',\n          }}>\n          <Button\n            arrFunctions={[() => this.props.createBoard(this.state.board)]}>\n            Create\n          </Button>\n          <Button arrFunctions={[this.props.toggleOptions]}>Close</Button>\n        </div>\n        {/*\n         * Worning about dublicate board\n         */}\n        <Modal visible={this.props.worningVisible}>\n          <div\n            style={{\n              textAlign: 'center',\n              padding: '2em',\n              backgroundColor: '#050505',\n            }}>\n            <Button arrFunctions={[this.props.toggleModalWorning]}>\n              Close\n            </Button>\n            <p\n              style={{\n                maxWidth: '25em',\n                textAlign: 'center',\n                fontSize: '1.6em',\n              }}>\n              Sorry but you cannot have boards <br /> with the same name and\n              color\n            </p>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n\n  setColor = (color) => {\n    this.setState({\n      board: { ...this.state.board, color: color },\n    });\n  };\n\n  setTitle = (title) => {\n    this.setState({\n      board: { ...this.state.board, title: title },\n    });\n  };\n\n  startInputFocus = () => {\n    this.setState({\n      inputFocus: true,\n    });\n  };\n\n  endInputFocus = () => {\n    this.setState({\n      inputFocus: false,\n    });\n  };\n}\n","import React from 'react';\n\nconst btnToggleStyles = {\n  static: {\n    margin: '0 .5rem',\n    padding: '1rem 1.4rem',\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n    border: 'none',\n    color: 'inherit',\n    borderRadius: '.3em',\n    backgroundColor: '#111',\n    transition: '.25s',\n  },\n\n  active: {\n    backgroundColor: '#282828',\n  },\n};\n\nexport default function BtnToggle(props) {\n  const { arrFunctions, active, children } = props;\n\n  return (\n    <button\n      onClick={() => {\n        if (arrFunctions) {\n          arrFunctions.forEach((func) => func());\n        }\n      }}\n      style={\n        active\n          ? { ...btnToggleStyles.static, ...btnToggleStyles.active }\n          : btnToggleStyles.static\n      }>\n      {children}\n    </button>\n  );\n}\n","import React from 'react';\n\nconst dropDownListStyles = {\n  width: '100%',\n  margin: '.6em',\n  borderRadius: '.3em',\n};\n\nconst toggleBtnStyles = {\n  width: '100%',\n  marginBottom: '.7em',\n  padding: '.6em 1em',\n  border: 'none',\n  borderRadius: '.3em',\n  boxShadow: '0 0 1em #000',\n  backgroundColor: 'transparent',\n  color: 'inherit',\n  transition: '.25s',\n};\n\nconst listStyles = {\n  display: 'none',\n};\n\nconst itemStyles = {\n  display: 'flex',\n  alignItems: 'center',\n  margin: '.3em 0',\n  padding: '.5em',\n  overflow: 'auto',\n  borderRadius: '.3em',\n  backgroundColor: '#181818',\n};\n\nconst magnifierIcon = (\n  <svg\n    style={{\n      width: '.9em',\n      height: '.9em',\n      fill: '#fff',\n    }}\n    version='1.1'\n    xmlns='http://www.w3.org/2000/svg'\n    x='0px'\n    y='0px'\n    viewBox='0 0 512.005 512.005'>\n    <path\n      d='M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\n\t\t\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\n\t\t\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\n\t\t\t M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z'\n    />\n  </svg>\n);\n\nexport default class DropDownList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      listVisible: false,\n    };\n  }\n\n  render() {\n    return (\n      <div style={dropDownListStyles}>\n        <button\n          style={\n            this.state.listVisible\n              ? {\n                  ...toggleBtnStyles,\n                  backgroundColor: this.props.color,\n                  color: '#000',\n                }\n              : {\n                  ...toggleBtnStyles,\n                  backgroundColor: '#222',\n                  color: '#fff',\n                }\n          }\n          onClick={this.toggleListVisible}>\n          {this.props.name}\n        </button>\n        <ul\n          style={\n            this.state.listVisible\n              ? {\n                  ...listStyles,\n                  display: 'block',\n                }\n              : listStyles\n          }>\n          {/* taskItem[0] - text, taskItem[1] - full date now */}\n          {this.props.listTask.map((taskItem, index) => {\n            return (\n              <li style={itemStyles} key={taskItem[0] + index}>\n                <span style={{ flex: '1' }}>{taskItem[0]}</span>\n                <span\n                  onClick={() => this.props.toggleTaskModal(taskItem)}\n                  style={{ cursor: 'pointer' }}>\n                  {magnifierIcon}\n                </span>\n              </li>\n            );\n          })}\n        </ul>\n      </div>\n    );\n  }\n\n  toggleListVisible = () => {\n    this.setState({\n      listVisible: !this.state.listVisible,\n    });\n  };\n}\n","import React from 'react';\nimport DropDownList from '../common/DropDownList';\nimport Modal from '../common/Modal';\nimport Button from '../common/Button';\n\nconst menuStyles = {\n  position: 'fixed',\n  zIndex: '2',\n  top: '0',\n  left: '-100%',\n  height: '100%',\n  padding: '2.5rem',\n  paddingTop: '7em',\n  boxShadow: '0 0 .8em #000',\n  backgroundColor: '#090909',\n  transition: '.3s',\n};\n\nexport default class Menu extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      selectedTask: null,\n    };\n  }\n\n  render() {\n    return (\n      <>\n        <section\n          style={this.props.visible ? { ...menuStyles, left: '0' } : menuStyles}\n        >\n          <DropDownList\n            name=\"Completed tasks\"\n            color={this.props.color}\n            listTask={this.props.board.completedTasks}\n            toggleTaskModal={this.toggleTaskModal}\n          />\n          <DropDownList\n            name=\"Unfulfilled tasks\"\n            color={this.props.color}\n            listTask={this.props.board.unfulfilledTasks}\n            toggleTaskModal={this.toggleTaskModal}\n          />\n        </section>\n\n        <Modal visible={this.state.selectedTask}>\n          <div\n            style={{\n              padding: '2em',\n              borderRadius: '.3em',\n              backgroundColor: '#080808',\n            }}\n          >\n            <Button arrFunctions={[() => this.toggleTaskModal(null)]}>\n              Close\n            </Button>\n            <div\n              style={{\n                padding: '2em 0 .5em',\n                borderBottom: '.1em solid #222',\n              }}\n            >\n              {/*taskItem[1] - full date now */}\n              {this.state.selectedTask ? this.state.selectedTask[1] : ''}\n            </div>\n            <div\n              style={{ padding: '3em 0 .5em', borderBottom: '.1em solid #222' }}\n            >\n              {/* taskItem[0] - text */}\n              {this.state.selectedTask ? this.state.selectedTask[0] : ''}\n            </div>\n          </div>\n        </Modal>\n      </>\n    );\n  }\n\n  toggleTaskModal = (taskItem) => {\n    this.setState({\n      selectedTask: taskItem,\n    });\n  };\n}\n","import React from 'react';\n\nconst columnStyles = {\n  padding: '1em',\n  margin: '1em 1%',\n  borderRadius: '.5em',\n  backgroundColor: '#111',\n  transition: '.25s',\n};\n\nexport default class Column extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hide: false,\n    };\n  }\n\n  render() {\n    return (\n      <div\n        onMouseMove={this.startHover}\n        onMouseLeave={this.endHover}\n        style={\n          this.props.active\n            ? {\n                ...columnStyles,\n                width: this.props.width,\n                minWidth: this.props.minWidth,\n                border: `.1em solid ${this.props.borderColor}`,\n                boxShadow: '0 .8em .7em #000',\n              }\n            : {\n                ...columnStyles,\n                width: this.props.width,\n                minWidth: this.props.minWidth,\n                border: '.1em solid transparent',\n              }\n        }\n      >\n        <button\n          onClick={this.toggleHideColumn}\n          style={{\n            padding: '.2em 0',\n            fontSize: '.8em',\n            border: 'none',\n            backgroundColor: 'transparent',\n            color: '#888',\n          }}\n        >\n          {this.state.hide ? 'Show' : 'Hide'}\n        </button>\n        <div\n          style={\n            this.state.hide\n              ? {\n                  height: '0',\n                  visibility: 'hidden',\n                  opacity: '0',\n                  transition: '.15s',\n                }\n              : { transition: '.15s' }\n          }\n        >\n          {this.props.children}\n        </div>\n      </div>\n    );\n  }\n\n  toggleHideColumn = () => {\n    this.setState({\n      hide: !this.state.hide,\n    });\n  };\n}\n","import React from 'react';\n\nconst taskWrapperStyles = {\n  cursor: 'grab',\n  margin: '.5em 0',\n  padding: '.4em',\n  display: 'flex',\n  alignItems: 'center',\n  borderRadius: '.3em',\n  color: '#000',\n};\n\nconst btnStyles = {\n  padding: '.2em',\n  border: 'none',\n  fontSize: '1.2em',\n  backgroundColor: 'transparent',\n  color: '#000',\n};\n\nexport default function Task({\n  index,\n  task,\n  color,\n  openTaskModal,\n  dragStartHandler,\n  dragLeaveHandler,\n  dragEndHandler,\n  dragOverHandler,\n  dropHandler,\n}) {\n  return (\n    <li\n      onDragStart={(event) => dragStartHandler(event, [index, task])}\n      onDragLeave={(event) => dragLeaveHandler(event)}\n      onDragEnd={(event) => dragEndHandler(event)}\n      onDragOver={(event) => dragOverHandler(event)}\n      onDrop={(event) => dropHandler(event, [index, task])}\n      draggable={true}\n      style={{\n        ...taskWrapperStyles,\n        backgroundColor: color,\n      }}>\n      <span\n        style={{\n          flex: '1',\n          overflowX: 'auto',\n          overflowY: 'hidden',\n        }}>\n        {task}\n      </span>\n      <button onClick={() => openTaskModal(index, task)} style={btnStyles}>\n        🖉\n      </button>\n    </li>\n  );\n}\n","import React from 'react';\n\nconst btnModalStyles = {\n  static: {\n    padding: '.4em',\n    border: 'none',\n    boxShadow: '0 0 .1em #000',\n    backgroundColor: '#242424',\n    color: '#fff',\n    transition: '.25s',\n  },\n\n  hover: {\n    color: '#000',\n  },\n};\n\nexport default class BtnModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hover: false,\n    };\n  }\n\n  render() {\n    const { arrFunctions, style, color, children } = this.props;\n\n    return (\n      <button\n        onMouseMove={this.startHover}\n        onMouseLeave={this.endHover}\n        onClick={() => arrFunctions.forEach((func) => func())}\n        style={\n          this.state.hover\n            ? {\n                ...btnModalStyles.static,\n                ...btnModalStyles.hover,\n                backgroundColor: color,\n                ...style,\n              }\n            : { ...btnModalStyles.static, ...style }\n        }\n      >\n        {children}\n      </button>\n    );\n  }\n\n  startHover = () => {\n    this.setState({\n      hover: true,\n    });\n  };\n\n  endHover = () => {\n    this.setState({\n      hover: false,\n    });\n  };\n}\n","import React from 'react';\nimport Task from '../common/Task';\nimport Modal from '../common/Modal';\nimport BtnModal from '../common/BtnModal';\n\nconst wrapperModalContentStyles = {\n  padding: '1.2em',\n  display: 'grid',\n  gridTemplateColumns: 'repeat(7, 4em)',\n  gridTemplateRows: 'repeat(8, 1fr)',\n  fontSize: '1.4em',\n  borderRadius: '.4em',\n  backgroundColor: '#111',\n};\n\nconst taskModalFieldStyles = {\n  gridColumnStart: '1',\n  gridColumnEnd: '7',\n  gridRowStart: '2',\n  gridRowEnd: '9',\n  padding: '.4em',\n  resize: 'none',\n  borderRadius: '0 0 .3em .3em',\n  border: '.1em solid #151515',\n  boxShadow: 'inset 0 0 .4em #000',\n  backgroundColor: 'transparent',\n  color: '#fff',\n};\n\nexport default class ListTasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      visibleTaskModal: false,\n      currentIndex: null,\n      currentText: '',\n    };\n  }\n\n  render() {\n    return (\n      <div>\n        <ul>\n          {this.props.tasks.map((task, index) => {\n            return (\n              <Task\n                task={task}\n                index={index}\n                color={this.props.color}\n                key={task + index}\n                openTaskModal={this.openTaskModal}\n                dragStartHandler={this.dragStartHandler}\n                dragLeaveHandler={this.dragLeaveHandler}\n                dragEndHandler={this.dragEndHandler}\n                dragOverHandler={this.dragOverHandler}\n                dropHandler={this.dropHandler}\n              />\n            );\n          })}\n        </ul>\n\n        <Modal visible={this.state.visibleTaskModal}>\n          <div style={wrapperModalContentStyles}>\n            <BtnModal\n              arrFunctions={[this.closeTaskModal]}\n              color={this.props.color}\n              style={{\n                gridColumnStart: '1',\n                gridColumnEnd: '7',\n                gridRowStart: '1',\n                gridRowEnd: '2',\n                borderRadius: '.3em .3em 0 0',\n              }}>\n              Close\n            </BtnModal>\n            <textarea\n              style={taskModalFieldStyles}\n              value={this.state.currentText}\n              onChange={(event) =>\n                this.changeCurrentTaskText(event.target.value)\n              }\n              onBlur={(event) => {\n                this.props.changeTask(\n                  this.state.currentIndex,\n                  event.target.value\n                );\n              }}\n            />\n            <div\n              style={{\n                gridColumnStart: '7',\n                gridColumnEnd: '8',\n                gridRowStart: '2',\n                gridRowEnd: '9',\n                display: 'flex',\n                flexDirection: 'column',\n              }}>\n              <BtnModal\n                color={this.props.color}\n                style={{ borderTopRightRadius: '.3em' }}\n                arrFunctions={[\n                  this.closeTaskModal,\n                  () =>\n                    this.props.addTaskToCompleted(\n                      this.state.currentIndex,\n                      this.state.currentText\n                    ),\n                ]}>\n                ✔\n              </BtnModal>\n              <BtnModal\n                color={this.props.color}\n                style={{ borderBottomRightRadius: '.3em' }}\n                arrFunctions={[\n                  this.closeTaskModal,\n                  () =>\n                    this.props.addTaskToUnfulfilled(\n                      this.state.currentIndex,\n                      this.state.currentText\n                    ),\n                ]}>\n                ⨯\n              </BtnModal>\n            </div>\n          </div>\n        </Modal>\n      </div>\n    );\n  }\n\n  changeCurrentTaskText = (text) => {\n    this.setState({\n      currentText: text,\n    });\n  };\n\n  // TODO: ----------------------------------\n  /**\n   * @param  {event object} event\n   * @param  {array [taskIndex, taskText]} taskArr\n   */\n  dragStartHandler = (event, taskArr) => {\n    //\n  };\n\n  dragLeaveHandler = (event) => {\n    //\n  };\n\n  dragEndHandler = (event) => {\n    //\n  };\n\n  dragOverHandler = (event) => {\n    event.preventDefault();\n  };\n\n  /**\n   * @param  {event object} event\n   * @param  {array [taskIndex, taskText]} taskArr\n   */\n  dropHandler = (event, taskArr) => {\n    event.preventDefault();\n    console.log(event.target);\n    // * event.target <- drop task\n    // * task <- upper task\n    // this.props.updateTaskOrderInColumn()\n  };\n  // TODO: ----------------------------------\n\n  openTaskModal = (index, taskText) => {\n    this.setState({\n      visibleTaskModal: true,\n      currentIndex: index,\n      currentText: taskText,\n    });\n  };\n\n  closeTaskModal = () => {\n    this.setState({\n      visibleTaskModal: false,\n      currentTaskArr: [],\n    });\n  };\n}\n","import React from 'react';\n\nconst buttonStyle = {\n  cursor: 'pointer',\n  padding: '.4em',\n  border: 'none',\n  backgroundColor: 'transparent',\n};\n\nexport default function Button({ arrFunctions, children }) {\n  return (\n    <button\n      onClick={() => {\n        arrFunctions.forEach((func) => func());\n      }}\n      style={buttonStyle}\n    >\n      {children}\n    </button>\n  );\n}\n","import React from 'react';\nimport Button from './Button';\n\nconst fieldStyles = {\n  resize: 'none',\n  width: '100%',\n  padding: '.4em',\n  border: 'none',\n  boxShadow: 'inset 0 0 .2em #111',\n  backgroundColor: 'transparent',\n};\n\nconst btnPlusTaskStyles = {\n  display: 'inline-block',\n  width: '100%',\n  height: '100%',\n  padding: '.2em',\n  borderRadius: 'inherit',\n  border: 'none',\n  backgroundColor: 'transparent',\n  transition: '.25s',\n};\n\nexport default class AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      text: '',\n      showField: false,\n      hover: false,\n    };\n  }\n\n  render() {\n    const addTaskStyles = {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'center',\n      borderRadius: '.4em',\n      backgroundColor: this.props.color,\n      transition: '.25s',\n    };\n\n    return (\n      <div style={addTaskStyles}>\n        {this.state.showField ? (\n          <div style={{ width: '100%' }}>\n            <textarea\n              style={fieldStyles}\n              onBlur={(event) => {\n                this.setTaskText(event.target.value);\n              }}\n              placeholder=\"...\"\n            ></textarea>\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\n              <Button\n                arrFunctions={[\n                  () => {\n                    if (this.state.text) {\n                      this.props.addTask(this.props.place, this.state.text);\n                      this.toggleShowField();\n                    }\n                  },\n                  () => this.setTaskText(''),\n                ]}\n              >\n                Add\n              </Button>\n              <Button arrFunctions={[this.toggleShowField]}>⨯</Button>\n            </div>\n          </div>\n        ) : (\n          <button\n            onMouseMove={this.startHover}\n            onMouseLeave={this.endHover}\n            style={btnPlusTaskStyles}\n            onClick={this.toggleShowField}\n          >\n            {/* TODO: add constant for styles */}\n            <span\n              style={\n                this.state.hover\n                  ? {\n                      display: 'inline-block',\n                      transform: 'translateX(-.2em)',\n                      transition: '.25s',\n                    }\n                  : { display: 'inline-block', transition: '.25s' }\n              }\n            >\n              +\n            </span>{' '}\n            <span\n              style={\n                this.state.hover\n                  ? {\n                      display: 'inline-block',\n                      transform: 'translateX(.2em)',\n                      transition: '.25s',\n                    }\n                  : { display: 'inline-block', transition: '.25s' }\n              }\n            >\n              Task\n            </span>\n          </button>\n        )}\n      </div>\n    );\n  }\n\n  setTaskText = (text) => {\n    this.setState({\n      text,\n    });\n  };\n\n  startHover = () => {\n    this.setState({\n      hover: true,\n    });\n  };\n\n  endHover = () => {\n    this.setState({\n      hover: false,\n    });\n  };\n\n  toggleShowField = () => {\n    this.setState({\n      showField: !this.state.showField,\n    });\n  };\n}\n","import React from 'react';\nimport Column from '../common/Column';\nimport Title from '../common/Title';\nimport ListTasks from './ListTasks';\nimport AddTask from '../common/AddTask/AddTask';\n\nconst daysColumnsStyles = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'flex-start',\n  justifyContent: 'center',\n};\n\nconst daysOfWeek = [\n  'Monday',\n  'Tuesday',\n  'Wednesday',\n  'Thursday',\n  'Friday',\n  'Saturday',\n  'Sunday',\n];\nexport default class Days extends React.Component {\n  render() {\n    return (\n      <section style={daysColumnsStyles}>\n        {daysOfWeek.map((day, index) => {\n          return (\n            <Column\n              minWidth='12em'\n              width='12%'\n              active={new Date().getDay() - 1 === index}\n              borderColor={this.props.board.color}\n              title={day}\n              key={day + index}>\n              <Title padding='1rem 0' size='1.4em'>\n                {day}\n              </Title>\n\n              <ListTasks\n                color={this.props.board.color}\n                tasks={this.props.board.days[day]}\n                addTaskToCompleted={(taskIndex, task) => {\n                  this.props.addTaskToCompleted(['days', day, taskIndex, task]);\n                }}\n                addTaskToUnfulfilled={(taskIndex, task) => {\n                  this.props.addTaskToUnfulfilled([\n                    'days',\n                    day,\n                    taskIndex,\n                    task,\n                  ]);\n                }}\n                updateTaskOrderInColumn={this.props.updateTaskOrderInColumn}\n                changeTask={(taskIndex, newTask) =>\n                  this.props.changeTask(['days', day, taskIndex, newTask])\n                }\n              />\n\n              <AddTask\n                place={day}\n                addTask={this.props.addTaskToDay}\n                color={this.props.board.color}\n              />\n            </Column>\n          );\n        })}\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport Column from '../common/Column';\nimport Title from '../common/Title';\nimport ListTasks from './ListTasks';\nimport AddTask from '../common/AddTask/AddTask';\n\nconst worksColumnsStyles = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'flex-start',\n  justifyContent: 'center',\n};\n\nconst workStages = ['ToDo', 'Doing', 'Done'];\nclass Works extends React.Component {\n  render() {\n    return (\n      <section style={worksColumnsStyles}>\n        {workStages.map((stage, index) => {\n          return (\n            <Column\n              minWidth='12em'\n              width='30.5%'\n              title={stage}\n              key={stage + index}>\n              <Title padding='1rem 0' size='1.4em'>\n                {stage}\n              </Title>\n\n              <ListTasks\n                color={this.props.board.color}\n                tasks={this.props.board.works[stage]}\n                addTaskToCompleted={(taskIndex, task) => {\n                  this.props.addTaskToCompleted([\n                    'works',\n                    stage,\n                    taskIndex,\n                    task,\n                  ]);\n                }}\n                addTaskToUnfulfilled={(taskIndex, task) => {\n                  this.props.addTaskToUnfulfilled([\n                    'works',\n                    stage,\n                    taskIndex,\n                    task,\n                  ]);\n                }}\n                updateTaskOrderInColumn={this.props.updateTaskOrderInColumn}\n                changeTask={(taskIndex, newTask) =>\n                  this.props.changeTask(['works', stage, taskIndex, newTask])\n                }\n              />\n\n              <AddTask\n                place={stage}\n                addTask={this.props.addTaskToStage}\n                color={this.props.board.color}\n              />\n            </Column>\n          );\n        })}\n      </section>\n    );\n  }\n}\n\nexport default Works;\n","import React from 'react';\nimport BtnToggle from '../common/BtnToggle';\nimport Title from '../common/Title';\nimport Menu from './Menu';\nimport Days from './Days';\nimport Works from './Works';\nimport '../componentStyles/board.css';\n\nconst svgLeftArrow = (\n  <svg\n    style={{\n      width: '1rem',\n      heigh: '1rem',\n      marginRight: '.5rem',\n      fill: '#fff',\n    }}\n    version='1.1'\n    xmlns='http://www.w3.org/2000/svg'\n    x='0px'\n    y='0px'\n    viewBox='0 0 492 492'>\n    <path\n      d='M198.608,246.104L382.664,62.04c5.068-5.056,7.856-11.816,7.856-19.024c0-7.212-2.788-13.968-7.856-19.032l-16.128-16.12\n   C361.476,2.792,354.712,0,347.504,0s-13.964,2.792-19.028,7.864L109.328,227.008c-5.084,5.08-7.868,11.868-7.848,19.084\n   c-0.02,7.248,2.76,14.028,7.848,19.112l218.944,218.932c5.064,5.072,11.82,7.864,19.032,7.864c7.208,0,13.964-2.792,19.032-7.864\n   l16.124-16.12c10.492-10.492,10.492-27.572,0-38.06L198.608,246.104z'\n    />\n  </svg>\n);\n\nexport default class Board extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      daysVisible: true,\n      menuVisible: false,\n    };\n  }\n\n  render() {\n    return (\n      <section className='board'>\n        <div className='board__header'>\n          <BtnToggle arrFunctions={[this.props.backToBoards]}>\n            {svgLeftArrow}\n            <Title>{this.props.board.title}</Title>\n          </BtnToggle>\n          <BtnToggle\n            arrFunctions={[() => this.setVisibleDays(true)]}\n            active={this.state.daysVisible}>\n            Days\n          </BtnToggle>\n          <BtnToggle\n            arrFunctions={[() => this.setVisibleDays(false)]}\n            active={!this.state.daysVisible}>\n            Works\n          </BtnToggle>\n          <BtnToggle\n            arrFunctions={[this.toggleVisibleMenu]}\n            active={this.state.menuVisible}>\n            ☰\n          </BtnToggle>\n        </div>\n\n        <Menu\n          board={this.props.board}\n          visible={this.state.menuVisible}\n          color={this.props.board.color}\n        />\n\n        <div style={{ paddingLeft: '3vw' }}>\n          {this.state.daysVisible ? (\n            <Days {...this.props} />\n          ) : (\n            <Works {...this.props} />\n          )}\n        </div>\n      </section>\n    );\n  }\n\n  setVisibleDays = (bool) => {\n    this.setState({\n      daysVisible: bool,\n    });\n  };\n\n  toggleVisibleMenu = () => {\n    this.setState({\n      menuVisible: !this.state.menuVisible,\n    });\n  };\n}\n","import React from 'react';\n\nconst boardItemStyles = {\n  static: {\n    cursor: 'pointer',\n    maxWidth: '20vw',\n    margin: '.7em',\n    marginLeft: '0',\n    padding: '1em',\n    overflow: 'auto',\n    display: 'flex',\n    alignItems: 'center',\n    borderRadius: '.3em',\n    transition: '.25s',\n  },\n\n  hover: {\n    color: '#000',\n  },\n};\n\nexport default class BoardItem extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      boardItemHover: false,\n    };\n  }\n\n  render() {\n    return (\n      <li\n        onMouseEnter={this.startItemHover}\n        onMouseLeave={this.endItemHover}\n        className={this.props.destroyMode ? 'destroy-item' : ''}\n        onClick={() => {\n          this.props.destroyMode\n            ? this.props.deleteBoard(\n                this.props.item.title + this.props.item.color\n              )\n            : this.props.openBoard(this.props.index);\n        }}\n        style={\n          this.state.boardItemHover\n            ? {\n                ...boardItemStyles.static,\n                ...boardItemStyles.hover,\n                transform: 'translateY(-2px)',\n                border: `.1em solid ${this.props.item.color}`,\n                backgroundColor: this.props.item.color,\n              }\n            : {\n                ...boardItemStyles.static,\n                border: `.1em solid ${this.props.item.color}`,\n              }\n        }\n      >\n        {this.props.item.title}\n        <span className=\"color\" hidden>\n          {this.props.item.color}\n        </span>\n      </li>\n    );\n  }\n\n  startItemHover = () => {\n    this.setState({\n      boardItemHover: true,\n    });\n  };\n\n  endItemHover = () => {\n    this.setState({\n      boardItemHover: false,\n    });\n  };\n}\n","import React from 'react';\nimport Button from '../common/Button';\nimport BoardItem from '../common/BoardItem';\n\nconst listHeaderStyles = {\n  display: 'flex',\n  flexWrap: 'wrap',\n  alignItems: 'center',\n};\n\nconst boardsListStyles = {\n  margin: '1em 0',\n  display: 'flex',\n  flexWrap: 'wrap',\n};\n\nexport default class ListBoards extends React.Component {\n  render() {\n    const {\n      destroyMode,\n      toggleOptions,\n      toggleDestroyMode,\n      openBoard,\n      deleteBoard,\n      boards = [],\n    } = this.props;\n\n    return (\n      <section>\n        <div style={listHeaderStyles}>\n          <div\n            style={{\n              width: '11em',\n              display: 'flex',\n              flexWrap: 'wrap',\n              justifyContent: 'space-between',\n            }}>\n            <Button block={destroyMode} arrFunctions={[toggleOptions]}>\n              Add\n            </Button>\n            <Button arrFunctions={[toggleDestroyMode]}>Delete</Button>\n          </div>\n          <span style={{ flex: '1', textAlign: 'right', fontSize: '1.2em' }}>\n            Created: {boards.length}\n          </span>\n        </div>\n\n        <ul style={boardsListStyles}>\n          {boards.map((item, index) => {\n            return (\n              <BoardItem\n                item={item}\n                index={index}\n                openBoard={openBoard}\n                deleteBoard={deleteBoard}\n                destroyMode={destroyMode}\n                key={item.title + item.color}></BoardItem>\n            );\n          })}\n        </ul>\n      </section>\n    );\n  }\n}\n","import React from 'react';\nimport Container from '../common/Container';\nimport Title from '../common/Title';\nimport Modal from '../common/Modal';\nimport BoardOptions from './BoardOptions';\nimport Board from './Board';\nimport ListBoards from './ListBoards';\nimport '../componentStyles/userBoards.css';\n\nexport default class UserBoards extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      destroyMode: false,\n      warningVisible: false,\n      optionsVisible: false,\n    };\n  }\n\n  render() {\n    const { boards } = this.props;\n    const { destroyMode, optionsVisible, warningVisible } = this.state;\n\n    return (\n      <section className='user-boards-container'>\n        {this.props.board ? (\n          <Board {...this.props} backToBoards={this.backToBoards} />\n        ) : (\n          <div\n            style={{\n              minWidth: '27em',\n              width: '60%',\n            }}>\n            <Title underline padding='1em 0' size='4em'>\n              Track of your tasks\n            </Title>\n\n            <Container>\n              <div style={{ width: '100%' }}>\n                <Title padding='1em 0' size='2.4em'>\n                  Your boards\n                </Title>\n                <ListBoards\n                  toggleOptions={this.toggleOptions}\n                  toggleDestroyMode={this.toggleDestroyMode}\n                  openBoard={this.openBoard}\n                  deleteBoard={this.deleteBoard}\n                  destroyMode={destroyMode}\n                  boards={boards}\n                />\n              </div>\n            </Container>\n\n            {optionsVisible && (\n              <Modal visible={optionsVisible}>\n                <BoardOptions\n                  toggleOptions={this.toggleOptions}\n                  toggleModalWorning={this.toggleModalWorning}\n                  createBoard={this.createBoard}\n                  warningVisible={warningVisible}\n                />\n              </Modal>\n            )}\n          </div>\n        )}\n      </section>\n    );\n  }\n\n  toggleOptions = () => {\n    this.setState((state) => ({\n      optionsVisible: !state.optionsVisible,\n    }));\n  };\n\n  createBoard = (newBoard) => {\n    let coincidence = false;\n\n    this.props.boards.forEach((board) => {\n      if (board.title === newBoard.title && board.color === newBoard.color) {\n        coincidence = true;\n      }\n    });\n\n    if (!coincidence) {\n      this.props.addBoard(newBoard);\n      this.toggleOptions();\n    } else {\n      this.toggleModalWorning();\n    }\n  };\n\n  deleteBoard = (key) => {\n    this.props.removeBoard(key);\n  };\n\n  toggleDestroyMode = () => {\n    this.setState((state) => ({\n      destroyMode: !state.destroyMode,\n    }));\n  };\n\n  openBoard = (index) => {\n    this.props.chooseBoard(index);\n  };\n\n  backToBoards = () => {\n    this.props.chooseBoard(null);\n  };\n\n  toggleModalWorning = () => {\n    this.setState((state) => ({\n      warningVisible: !state.warningVisible,\n    }));\n  };\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport {\n  boardActionCreators as boardAC,\n  taskActionCreators as taskAC,\n} from './store/actionCreators/index';\nimport UserBoards from './components/UserBoards';\n\nconst App = (props) => {\n  const {\n    boards: { boards, currentBoard },\n    addBoard,\n    removeBoard,\n    chooseBoard,\n    changeTask,\n    addTaskToDay,\n    addTaskToStage,\n    addTaskToCompleted,\n    addTaskToUnfulfilled,\n    updateTaskOrderInColumn,\n  } = props;\n\n  return (\n    <div style={{ position: 'relative', minHeight: '100vh' }}>\n      <UserBoards\n        boards={boards}\n        board={currentBoard}\n        addBoard={addBoard}\n        removeBoard={removeBoard}\n        chooseBoard={chooseBoard}\n        changeTask={changeTask}\n        addTaskToDay={addTaskToDay}\n        addTaskToStage={addTaskToStage}\n        addTaskToCompleted={addTaskToCompleted}\n        addTaskToUnfulfilled={addTaskToUnfulfilled}\n        updateTaskOrderInColumn={updateTaskOrderInColumn}\n      />\n    </div>\n  );\n};\n\nconst mapStateToProps = (store) => {\n  console.log('store: ', store);\n  return store;\n};\n\nconst mapDispatchToProps = (dispatch) => ({\n  addBoard: (board) => dispatch(boardAC.addBoard(board)),\n  removeBoard: (key) => dispatch(boardAC.removeBoard(key)),\n  chooseBoard: (index) => dispatch(boardAC.chooseBoard(index)),\n  changeTask: (array) => dispatch(taskAC.changeTask(array)),\n  addTaskToDay: (day, task) => dispatch(taskAC.addTaskToDay(day, task)),\n  addTaskToStage: (stage, task) => dispatch(taskAC.addTaskToStage(stage, task)),\n  addTaskToCompleted: (array) => dispatch(taskAC.addTaskToCompleted(array)),\n  addTaskToUnfulfilled: (array) => dispatch(taskAC.addTaskToUnfulfilled(array)),\n  updateTaskOrderInColumn: (taskObj) =>\n    dispatch(taskAC.updateTaskOrderInColumn(taskObj)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './store/store';\nimport 'normalize.css';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}