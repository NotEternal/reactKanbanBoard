{"version":3,"sources":["store/actions/index.js","store/actions/boardActions.js","store/actions/taskActions.js","store/reducers/boardsReducer.js","store/reducers/rootReducer.js","store/store.js","store/actionCreators/boardActionCreators.js","store/actionCreators/taskActionCreators.js","common/Container.js","common/Title.js","common/Modal.js","common/Button.js","common/Color.js","components/BoardOptions.js","components/CreateBoard.js","common/BtnToggle.js","common/DropDownList.js","components/Menu.js","common/Column.js","common/Task.js","common/BtnModal.js","components/ListTasks.js","common/AddTask/Button.js","common/AddTask/AddTask.js","components/Days.js","components/Works.js","components/Board.js","common/BoardItem.js","components/ListBoards.js","components/UserBoards.js","App.js","index.js"],"names":["board","ADD_BOARD","DELETE_BOARD","CHOOSE_BOARD","task","CHANGE_TASK","ADD_TASK_TO_DAY","ADD_TASK_TO_STAGE","ADD_TASK_TO_COMPLETED","ADD_TASK_TO_UNFULFILLED","UPDATE_TASK_ORDER_IN_COLUMN","initialState","boards","currentBoard","undefined","addingBoard","state","payload","deletingBoard","filter","title","color","choosingBoard","changingTask","newCurrentBoard","Object","assign","place","section","index","newTask","addingTaskToDay","day","days","push","addingTaskToStage","stage","works","addingTaskToMenuLists","list","splice","timeNow","year","Date","getFullYear","month","getMonth","monthDay","getDate","weekDay","getDay","hours","getHours","minutes","getMinutes","returnTimeNow","completedTasks","Error","unfulfilledTasks","error","console","updatingTaskOrderInColumn","draggedTaskArr","changeableTaskArr","rootReducer","combineReducers","objBoards","action","boardActions","actions","taskActions","type","store","createStore","applyMiddleware","logger","containerStyles","minHeight","padding","display","flexDirection","alignItems","border","borderRadius","boxShadow","background","Container","children","style","Title","underline","size","margin","fontSize","textDecoration","modalStyles","position","top","left","width","height","justifyContent","visibility","opacity","backgroundColor","transition","Modal","visible","backdropFilter","buttonStyle","static","hover","transform","Button","props","startHover","setState","endHover","onMouseMove","this","onMouseLeave","onClick","arrFunctions","map","func","block","pointerEvents","React","Component","Color","colorStyles","setColor","optionsContainerStyles","maxWidth","inputStyles","marginTop","focus","colorsContainer","flexWrap","colors","BoardOptions","setTitle","startInputFocus","inputFocus","endInputFocus","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday","Sunday","ToDo","Doing","Done","onFocus","onBlur","event","target","value","placeholder","key","marginRight","marginBottom","marginLeft","overflowX","overflowY","toggleOptions","createBoard","createBoardStyles","bottom","right","CreateBoard","btnToggleStyles","active","BtnToggle","forEach","dropDownListStyles","toggleBtnStyles","listStyles","itemStyles","overflow","magnifierIcon","fill","version","xmlns","x","y","viewBox","d","DropDownList","toggleListVisible","listVisible","name","listTask","taskItem","flex","toggleTaskModal","cursor","menuStyles","zIndex","paddingTop","Menu","selectedTask","borderBottom","columnStyles","Column","toggleHideColumn","hide","minWidth","borderColor","taskWrapperStyles","btnStyles","Task","openTaskModal","dragStartHandler","dragLeaveHandler","dragEndHandler","dragOverHandler","dropHandler","onDragStart","onDragLeave","onDragEnd","onDragOver","onDrop","draggable","btnModalStyles","BtnModal","wrapperModalContentStyles","gridTemplateColumns","gridTemplateRows","taskModalFieldStyles","gridColumnStart","gridColumnEnd","gridRowStart","gridRowEnd","resize","ListTasks","changeCurrentTaskText","text","currentText","taskArr","preventDefault","log","taskText","visibleTaskModal","currentIndex","closeTaskModal","currentTaskArr","tasks","onChange","changeTask","borderTopRightRadius","addTaskToCompleted","borderBottomRightRadius","addTaskToUnfulfilled","fieldStyles","btnPlusTaskStyles","AddTask","setTaskText","toggleShowField","showField","addTaskStyles","addTask","daysColumnsStyles","daysOfWeek","Days","taskIndex","updateTaskOrderInColumn","addTaskToDay","worksColumnsStyles","workStages","Works","addTaskToStage","svgLeftArrow","heigh","Board","setVisibleDays","bool","daysVisible","toggleVisibleMenu","menuVisible","className","backToBoards","paddingLeft","boardItemStyles","BoardItem","startItemHover","boardItemHover","endItemHover","onMouseEnter","destroyMode","deleteBoard","item","openBoard","hidden","listHeaderStyles","boardsListStyles","ListBoards","toggleDestroyMode","textAlign","length","UserBoards","optionsVisible","newBoard","coincidence","toggleModal","addBoard","removeBoard","chooseBoard","modalVisible","App","addBoardAction","removeBoardAction","chooseBoardAction","changeTaskAction","addTaskToDayAction","addTaskToStageAction","addTaskToCompletedAction","addTaskToUnfulfilledAction","updateTaskOrderInColumnAction","connect","dispatch","array","arr","taskObj","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cda54896.chunk.js","sourcesContent":["import board from './boardActions';\r\nimport task from './taskActions';\r\n\r\nexport default {\r\n  board,\r\n  task,\r\n};\r\n","const ADD_BOARD = 'ADD_BOARD';\r\nconst DELETE_BOARD = 'DELETE_BOARD';\r\nconst CHOOSE_BOARD = 'CHOOSE_BOARD';\r\n\r\nexport default {\r\n  ADD_BOARD,\r\n  DELETE_BOARD,\r\n  CHOOSE_BOARD,\r\n};\r\n","const CHANGE_TASK = 'CHANGE_TASK';\r\nconst ADD_TASK_TO_DAY = 'ADD_TASK_TO_DAY';\r\nconst ADD_TASK_TO_STAGE = 'ADD_TASK_TO_STAGE';\r\nconst ADD_TASK_TO_COMPLETED = 'ADD_TASK_TO_COMPLETED';\r\nconst ADD_TASK_TO_UNFULFILLED = 'ADD_TASK_TO_UNFULFILLED';\r\nconst UPDATE_TASK_ORDER_IN_COLUMN = 'UPDATE_TASK_ORDER_IN_COLUMN';\r\n\r\nexport default {\r\n  CHANGE_TASK,\r\n  ADD_TASK_TO_DAY,\r\n  ADD_TASK_TO_STAGE,\r\n  ADD_TASK_TO_COMPLETED,\r\n  ADD_TASK_TO_UNFULFILLED,\r\n  UPDATE_TASK_ORDER_IN_COLUMN,\r\n};\r\n","import actions from '../actions/index';\r\n\r\n/*\r\n * Board struct\r\n *\r\n * board: {\r\n *   title: string,\r\n *   color: string,\r\n *   completedTasks: array,\r\n *   unfulfilledTasks: array,\r\n *   days: {\r\n *       Monday: array,\r\n *       Tuesday: array,\r\n *       Wednesday: array,\r\n *       Thursday: array,\r\n *       Friday: array,\r\n *       Saturday: array,\r\n *       Sunday: array,\r\n *   },\r\n *   works: {\r\n *     ToDo: array,\r\n *     Doing: array,\r\n *     Done: array,\r\n *   },\r\n * }\r\n */\r\n\r\nconst initialState = {\r\n  boards: [],\r\n  currentBoard: undefined,\r\n  // just for delopment\r\n  // currentBoard: {\r\n  //   title: 'Title',\r\n  //   color: 'white',\r\n  //   completedTasks: [],\r\n  //   unfulfilledTasks: [],\r\n  //   days: {\r\n  //     Monday: [],\r\n  //     Tuesday: [],\r\n  //     Wednesday: [],\r\n  //     Thursday: [],\r\n  //     Friday: [],\r\n  //     Saturday: [],\r\n  //     Sunday: [],\r\n  //   },\r\n  //   works: {\r\n  //     ToDo: [],\r\n  //     Doing: [],\r\n  //     Done: [],\r\n  //   },\r\n  // },\r\n};\r\n\r\nexport default function boardsReducer(state = initialState, action) {\r\n  const boardActions = actions.board;\r\n  const taskActions = actions.task;\r\n\r\n  switch (action.type) {\r\n    case boardActions.ADD_BOARD:\r\n      return addingBoard(state, action.payload);\r\n    case boardActions.DELETE_BOARD:\r\n      return deletingBoard(state, action.payload);\r\n    case boardActions.CHOOSE_BOARD:\r\n      return choosingBoard(state, action.payload);\r\n    case taskActions.CHANGE_TASK:\r\n      return changingTask(state, action.payload);\r\n    case taskActions.ADD_TASK_TO_DAY:\r\n      return addingTaskToDay(state, action.payload);\r\n    case taskActions.ADD_TASK_TO_STAGE:\r\n      return addingTaskToStage(state, action.payload);\r\n    case taskActions.ADD_TASK_TO_COMPLETED:\r\n      return addingTaskToMenuLists('completed', state, action.payload);\r\n    case taskActions.ADD_TASK_TO_UNFULFILLED:\r\n      return addingTaskToMenuLists('unfulfilled', state, action.payload);\r\n    case taskActions.UPDATE_TASK_ORDER_IN_COLUMN:\r\n      return updatingTaskOrderInColumn(state, action.payload);\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// ----------------------------------------------------\r\n// ---- BOARDS\r\n\r\nfunction addingBoard(state, payload) {\r\n  return {\r\n    boards: [...state.boards, payload],\r\n    currentBoard: state.currentBoard,\r\n  };\r\n}\r\n\r\nfunction deletingBoard(state, payload) {\r\n  return {\r\n    boards: state.boards.filter((board) => {\r\n      return board.title + board.color !== payload;\r\n    }),\r\n    currentBoard: state.currentBoard,\r\n  };\r\n}\r\n\r\nfunction choosingBoard(state, payload) {\r\n  return {\r\n    boards: [...state.boards],\r\n    currentBoard: state.boards[payload],\r\n  };\r\n}\r\n\r\n// ----------------------------------------------------\r\n// ---- TASKS\r\n\r\nfunction changingTask(state, payload) {\r\n  const newCurrentBoard = Object.assign(state.currentBoard);\r\n  const [place, section, index, newTask] = payload;\r\n\r\n  newCurrentBoard[place][section][index] = newTask;\r\n\r\n  return {\r\n    boards: [...state.boards],\r\n    currentBoard: { ...newCurrentBoard },\r\n  };\r\n}\r\n\r\nfunction addingTaskToDay(state, payload) {\r\n  const newCurrentBoard = Object.assign(state.currentBoard);\r\n  const [day, task] = payload;\r\n\r\n  newCurrentBoard.days[day].push(task);\r\n\r\n  return {\r\n    boards: [...state.boards],\r\n    currentBoard: { ...newCurrentBoard },\r\n  };\r\n}\r\n\r\nfunction addingTaskToStage(state, payload) {\r\n  const newCurrentBoard = Object.assign(state.currentBoard);\r\n  const [stage, task] = payload;\r\n\r\n  newCurrentBoard.works[stage].push(task);\r\n\r\n  return {\r\n    boards: [...state.boards],\r\n    currentBoard: { ...newCurrentBoard },\r\n  };\r\n}\r\n\r\n/**\r\n * @param  {string} list\r\n * @param  {object} state\r\n * @param  {array} payload\r\n */\r\nfunction addingTaskToMenuLists(list, state, payload) {\r\n  const newCurrentBoard = Object.assign(state.currentBoard);\r\n  const [place, section, index, task] = payload;\r\n\r\n  newCurrentBoard[place][section].splice(index, 1);\r\n  const timeNow = returnTimeNow();\r\n\r\n  try {\r\n    if (list === 'completed') {\r\n      newCurrentBoard.completedTasks.push([task, timeNow]);\r\n    } else if (list === 'unfulfilled') {\r\n      newCurrentBoard.unfulfilledTasks.push([task, timeNow]);\r\n    } else {\r\n      throw new Error('Error on adding task in menu lists');\r\n    }\r\n  } catch (error) {\r\n    console.error(error);\r\n  }\r\n\r\n  return {\r\n    boards: [...state.boards],\r\n    currentBoard: { ...newCurrentBoard },\r\n  };\r\n}\r\n\r\nfunction returnTimeNow() {\r\n  const year = new Date().getFullYear();\r\n  const month = new Date().getMonth() + 1;\r\n  const monthDay = new Date().getDate();\r\n  const weekDay = [\r\n    'Monday',\r\n    'Tuesday',\r\n    'Wednesday',\r\n    'Thursday',\r\n    'Friday',\r\n    'Saturday',\r\n    'Sunday',\r\n  ][new Date().getDay()];\r\n  const hours = new Date().getHours();\r\n  const minutes = new Date().getMinutes();\r\n\r\n  return `${year}.${month}.${monthDay} - ${weekDay} - ${hours}:${minutes}`;\r\n}\r\n\r\nfunction updatingTaskOrderInColumn(state, payload) {\r\n  const newCurrentBoard = Object.assign(state.currentBoard);\r\n  const { draggedTaskArr, changeableTaskArr } = payload;\r\n\r\n  // TODO: changed array in current border\r\n  // const [draggedIndex, draggedTask] = draggedTaskArr;\r\n  // const [changeabledIndex, changeabledTask] = changeableTaskArr;\r\n\r\n  return {\r\n    boards: [...state.boards],\r\n    currentBoard: { ...newCurrentBoard },\r\n  };\r\n}\r\n","import { combineReducers } from 'redux';\r\nimport boardsReducer from './boardsReducer';\r\n\r\nexport const rootReducer = combineReducers({\r\n  objBoards: boardsReducer,\r\n});\r\n","import { createStore, applyMiddleware } from 'redux';\r\nimport { rootReducer } from './reducers/rootReducer';\r\nimport logger from 'redux-logger';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(logger));\r\n\r\nexport default store;\r\n","import actions from '../actions/index';\r\n\r\nconst boardActions = actions.board;\r\n\r\nexport function addBoard(board) {\r\n  return {\r\n    type: boardActions.ADD_BOARD,\r\n    payload: board,\r\n  };\r\n}\r\n\r\nexport function removeBoard(key) {\r\n  return {\r\n    type: boardActions.DELETE_BOARD,\r\n    payload: key,\r\n  };\r\n}\r\n\r\nexport function chooseBoard(index) {\r\n  return {\r\n    type: boardActions.CHOOSE_BOARD,\r\n    payload: index,\r\n  };\r\n}\r\n","import actions from '../actions/index';\r\n\r\nconst taskActions = actions.task;\r\n\r\nexport function changeTask(arr) {\r\n  return {\r\n    type: taskActions.CHANGE_TASK,\r\n    payload: arr,\r\n  };\r\n}\r\n\r\nexport function addTaskToDay(day, task) {\r\n  return {\r\n    type: taskActions.ADD_TASK_TO_DAY,\r\n    payload: [day, task],\r\n  };\r\n}\r\n\r\nexport function addTaskToStage(stage, task) {\r\n  return {\r\n    type: taskActions.ADD_TASK_TO_STAGE,\r\n    payload: [stage, task],\r\n  };\r\n}\r\n\r\nexport function addTaskToCompleted(arr) {\r\n  return {\r\n    type: taskActions.ADD_TASK_TO_COMPLETED,\r\n    payload: arr,\r\n  };\r\n}\r\n\r\nexport function addTaskToUnfulfilled(arr) {\r\n  return {\r\n    type: taskActions.ADD_TASK_TO_UNFULFILLED,\r\n    payload: arr,\r\n  };\r\n}\r\n\r\nexport function updateTaskOrderInColumn(arr) {\r\n  return {\r\n    type: taskActions.UPDATE_TASK_ORDER_IN_COLUMN,\r\n    payload: arr,\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst containerStyles = {\r\n  minHeight: '50vh',\r\n  padding: '3em',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'flex-start',\r\n  border: '.1em solid #222',\r\n  borderRadius: '.4em',\r\n  boxShadow: '0 .3em 1em #000',\r\n  background: '#030303',\r\n};\r\n\r\nexport default function Container({ children }) {\r\n  return <div style={containerStyles}>{children}</div>;\r\n}\r\n","import React from 'react';\r\n\r\nexport default function Title({ underline, padding, size, color, children }) {\r\n  return (\r\n    <h3\r\n      style={{\r\n        margin: '0',\r\n        padding: padding || '0',\r\n        fontSize: size || '1em',\r\n        textDecoration: underline && 'underline',\r\n        color: color || '#fff',\r\n      }}>\r\n      {children}\r\n    </h3>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst modalStyles = {\r\n  position: 'absolute',\r\n  top: '0',\r\n  left: '0',\r\n  width: '100%',\r\n  height: '100%',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  visibility: 'hidden',\r\n  opacity: '0',\r\n  backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n  transition: '.2s',\r\n};\r\n\r\nexport default function Modal({ visible, children }) {\r\n  return (\r\n    <div\r\n      style={\r\n        visible\r\n          ? {\r\n              ...modalStyles,\r\n              visibility: 'visible',\r\n              opacity: '1',\r\n            }\r\n          : modalStyles\r\n      }\r\n    >\r\n      <div\r\n        style={{\r\n          padding: '1em',\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          alignItems: 'center',\r\n          justifyContent: 'center',\r\n          borderRadius: '.4em',\r\n          backdropFilter: 'blur(0.3em)',\r\n        }}\r\n      >\r\n        {children}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst buttonStyle = {\r\n  static: {\r\n    padding: '1em',\r\n    border: 'none',\r\n    borderRadius: '0.4em',\r\n    backgroundColor: '#111',\r\n    color: 'inherit',\r\n    transition: '0.2s',\r\n  },\r\n\r\n  hover: {\r\n    transform: 'translateY(-1px)',\r\n    boxShadow: '0 .5em .6em #000',\r\n    backgroundColor: '#222',\r\n  },\r\n};\r\n\r\nexport default class Button extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hover: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <button\r\n        onMouseMove={this.startHover}\r\n        onMouseLeave={this.endHover}\r\n        onClick={() => {\r\n          this.props.arrFunctions.map((func) => func());\r\n        }}\r\n        style={\r\n          this.props.block\r\n            ? { ...buttonStyle.static, pointerEvents: 'none', opacity: '.4' }\r\n            : this.state.hover\r\n            ? { ...buttonStyle.static, ...buttonStyle.hover }\r\n            : buttonStyle.static\r\n        }>\r\n        {this.props.children}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  startHover = () => {\r\n    this.setState({\r\n      hover: true,\r\n    });\r\n  };\r\n\r\n  endHover = () => {\r\n    this.setState({\r\n      hover: false,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nexport default class Color extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hover: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const colorStyles = {\r\n      display: 'inline-block',\r\n      width: '3em',\r\n      height: '3em',\r\n      margin: '.3em',\r\n      border: 'none',\r\n      borderRadius: '.3em',\r\n      backgroundColor: this.props.color,\r\n      transition: '.25s',\r\n    };\r\n\r\n    return (\r\n      <button\r\n        onMouseMove={this.startHover}\r\n        onMouseLeave={this.endHover}\r\n        onClick={() => {\r\n          this.props.setColor(this.props.color);\r\n        }}\r\n        style={\r\n          this.state.hover\r\n            ? {\r\n                ...colorStyles,\r\n                transform: 'rotate(12deg) scale(0.9)',\r\n              }\r\n            : colorStyles\r\n        }\r\n      ></button>\r\n    );\r\n  }\r\n\r\n  startHover = () => {\r\n    this.setState({\r\n      hover: true,\r\n    });\r\n  };\r\n\r\n  endHover = () => {\r\n    this.setState({\r\n      hover: false,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Color from '../common/Color';\r\nimport Button from '../common/Button';\r\n\r\nconst optionsContainerStyles = {\r\n  maxWidth: '27em',\r\n  padding: '2em',\r\n  fontSize: '1.2em',\r\n  borderRadius: '0.4em',\r\n  border: '0.1em solid #555',\r\n  transition: '0.2s',\r\n};\r\n\r\nconst inputStyles = {\r\n  static: {\r\n    width: '100%',\r\n    marginTop: '1em',\r\n    padding: '.6em',\r\n    border: 'none',\r\n    borderRadius: '.4em',\r\n    backgroundColor: '#111',\r\n    color: '#fff',\r\n    transition: '.1s',\r\n  },\r\n\r\n  focus: {\r\n    transform: 'translateY(-2px)',\r\n    boxShadow: '0 .4em .5em #000',\r\n  },\r\n};\r\n\r\nconst colorsContainer = {\r\n  width: '100%',\r\n  margin: '1.4em 0',\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  justifyContent: 'space-between',\r\n  border: '.1em solid #222',\r\n  borderRadius: '0.4em',\r\n};\r\n\r\nconst colors = [\r\n  '#6f3e9e',\r\n  '#fc6456',\r\n  '#54f057',\r\n  '#567afc',\r\n  '#fffc31',\r\n  '#fcb156',\r\n  '#3ce8df',\r\n  '#f0549f',\r\n  '#fefefe',\r\n  '#1e5dfc',\r\n  '#787878',\r\n  '#afe854',\r\n];\r\n\r\nexport default class BoardOptions extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      board: {\r\n        title: 'Untitled',\r\n        color: '#fefefe',\r\n        completedTasks: [],\r\n        unfulfilledTasks: [],\r\n        days: {\r\n          Monday: [],\r\n          Tuesday: [],\r\n          Wednesday: [],\r\n          Thursday: [],\r\n          Friday: [],\r\n          Saturday: [],\r\n          Sunday: [],\r\n        },\r\n        works: {\r\n          ToDo: [],\r\n          Doing: [],\r\n          Done: [],\r\n        },\r\n      },\r\n      inputFocus: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={optionsContainerStyles}>\r\n        <input\r\n          style={\r\n            this.state.inputFocus\r\n              ? { ...inputStyles.static, ...inputStyles.focus }\r\n              : inputStyles.static\r\n          }\r\n          onFocus={this.startInputFocus}\r\n          onBlur={(event) => {\r\n            this.endInputFocus();\r\n            event.target.value\r\n              ? this.setTitle(event.target.value)\r\n              : this.setTitle('Untitled');\r\n          }}\r\n          placeholder=\"Write board title\"\r\n        ></input>\r\n\r\n        <div style={colorsContainer}>\r\n          {colors.map((color, index) => {\r\n            return (\r\n              <Color\r\n                color={color}\r\n                setColor={this.setColor}\r\n                key={color + index}\r\n              />\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div style={{ display: 'flex', flexWrap: 'wrap' }}>\r\n          <div\r\n            style={{\r\n              marginRight: '7%',\r\n              display: 'flex',\r\n              alignItems: 'center',\r\n              marginBottom: '1em',\r\n            }}\r\n          >\r\n            Color:{' '}\r\n            <span\r\n              style={{\r\n                display: 'inline-block',\r\n                width: '.9em',\r\n                height: '.9em',\r\n                marginLeft: '.6em',\r\n                borderRadius: '50%',\r\n                backgroundColor: this.state.board.color,\r\n              }}\r\n            ></span>\r\n          </div>\r\n          <div style={{ overflowX: 'auto', overflowY: 'hidden' }}>\r\n            Title: {this.state.board.title}\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          style={{\r\n            marginTop: '.5em',\r\n            display: 'flex',\r\n            alignItems: 'center',\r\n            justifyContent: 'space-between',\r\n          }}\r\n        >\r\n          <Button\r\n            arrFunctions={[\r\n              this.props.toggleOptions,\r\n              () => this.props.createBoard(this.state.board),\r\n            ]}\r\n          >\r\n            Create\r\n          </Button>\r\n          <Button arrFunctions={[this.props.toggleOptions]}>Close</Button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setColor = (color) => {\r\n    this.setState({\r\n      board: { ...this.state.board, color: color },\r\n    });\r\n  };\r\n\r\n  setTitle = (title) => {\r\n    this.setState({\r\n      board: { ...this.state.board, title: title },\r\n    });\r\n  };\r\n\r\n  startInputFocus = () => {\r\n    this.setState({\r\n      inputFocus: true,\r\n    });\r\n  };\r\n\r\n  endInputFocus = () => {\r\n    this.setState({\r\n      inputFocus: false,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport BoardOptions from './BoardOptions';\r\n\r\nconst createBoardStyles = {\r\n  position: 'absolute',\r\n  top: '0',\r\n  left: '0',\r\n  bottom: '0',\r\n  right: '0',\r\n  display: 'flex',\r\n  flexDirection: 'column',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  backgroundColor: 'var(--dark)',\r\n};\r\n\r\nexport default function CreateBoard(props) {\r\n  const { toggleOptions, createBoard } = props;\r\n\r\n  return (\r\n    <section style={createBoardStyles}>\r\n      <BoardOptions toggleOptions={toggleOptions} createBoard={createBoard} />\r\n    </section>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst btnToggleStyles = {\r\n  static: {\r\n    margin: '0 .5rem',\r\n    padding: '1rem 1.4rem',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n    border: 'none',\r\n    color: 'inherit',\r\n    borderRadius: '.3em',\r\n    backgroundColor: '#111',\r\n    transition: '.25s',\r\n  },\r\n\r\n  active: {\r\n    backgroundColor: '#282828',\r\n  },\r\n};\r\n\r\nexport default function BtnToggle(props) {\r\n  const { arrFunctions, active, children } = props;\r\n\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        if (arrFunctions) {\r\n          arrFunctions.forEach((func) => func());\r\n        }\r\n      }}\r\n      style={\r\n        active\r\n          ? { ...btnToggleStyles.static, ...btnToggleStyles.active }\r\n          : btnToggleStyles.static\r\n      }>\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst dropDownListStyles = {\r\n  width: '100%',\r\n  margin: '.6em',\r\n  borderRadius: '.3em',\r\n};\r\n\r\nconst toggleBtnStyles = {\r\n  width: '100%',\r\n  marginBottom: '.7em',\r\n  padding: '.6em 1em',\r\n  border: 'none',\r\n  borderRadius: '.3em',\r\n  boxShadow: '0 0 1em #000',\r\n  backgroundColor: 'transparent',\r\n  color: 'inherit',\r\n  transition: '.25s',\r\n};\r\n\r\nconst listStyles = {\r\n  display: 'none',\r\n};\r\n\r\nconst itemStyles = {\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  margin: '.3em 0',\r\n  padding: '.5em',\r\n  overflow: 'auto',\r\n  borderRadius: '.3em',\r\n  backgroundColor: '#181818',\r\n};\r\n\r\nconst magnifierIcon = (\r\n  <svg\r\n    style={{\r\n      width: '.9em',\r\n      height: '.9em',\r\n      fill: '#fff',\r\n    }}\r\n    version='1.1'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    x='0px'\r\n    y='0px'\r\n    viewBox='0 0 512.005 512.005'>\r\n    <path\r\n      d='M505.749,475.587l-145.6-145.6c28.203-34.837,45.184-79.104,45.184-127.317c0-111.744-90.923-202.667-202.667-202.667\r\n\t\t\tS0,90.925,0,202.669s90.923,202.667,202.667,202.667c48.213,0,92.48-16.981,127.317-45.184l145.6,145.6\r\n\t\t\tc4.16,4.16,9.621,6.251,15.083,6.251s10.923-2.091,15.083-6.251C514.091,497.411,514.091,483.928,505.749,475.587z\r\n\t\t\t M202.667,362.669c-88.235,0-160-71.765-160-160s71.765-160,160-160s160,71.765,160,160S290.901,362.669,202.667,362.669z'\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default class DropDownList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      listVisible: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div style={dropDownListStyles}>\r\n        <button\r\n          style={\r\n            this.state.listVisible\r\n              ? {\r\n                  ...toggleBtnStyles,\r\n                  backgroundColor: this.props.color,\r\n                  color: '#000',\r\n                }\r\n              : {\r\n                  ...toggleBtnStyles,\r\n                  backgroundColor: '#222',\r\n                  color: '#fff',\r\n                }\r\n          }\r\n          onClick={this.toggleListVisible}>\r\n          {this.props.name}\r\n        </button>\r\n        <ul\r\n          style={\r\n            this.state.listVisible\r\n              ? {\r\n                  ...listStyles,\r\n                  display: 'block',\r\n                }\r\n              : listStyles\r\n          }>\r\n          {/* taskItem[0] - text, taskItem[1] - full date now */}\r\n          {this.props.listTask.map((taskItem, index) => {\r\n            return (\r\n              <li style={itemStyles} key={taskItem[0] + index}>\r\n                <span style={{ flex: '1' }}>{taskItem[0]}</span>\r\n                <span\r\n                  onClick={() => this.props.toggleTaskModal(taskItem)}\r\n                  style={{ cursor: 'pointer' }}>\r\n                  {magnifierIcon}\r\n                </span>\r\n              </li>\r\n            );\r\n          })}\r\n        </ul>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleListVisible = () => {\r\n    this.setState({\r\n      listVisible: !this.state.listVisible,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport DropDownList from '../common/DropDownList';\r\nimport Modal from '../common/Modal';\r\nimport Button from '../common/Button';\r\n\r\nconst menuStyles = {\r\n  position: 'fixed',\r\n  zIndex: '2',\r\n  top: '0',\r\n  left: '-100%',\r\n  height: '100%',\r\n  padding: '2.5rem',\r\n  paddingTop: '7em',\r\n  boxShadow: '0 0 .8em #000',\r\n  backgroundColor: '#090909',\r\n  transition: '.3s',\r\n};\r\n\r\nexport default class Menu extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      selectedTask: null,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <>\r\n        <section\r\n          style={this.props.visible ? { ...menuStyles, left: '0' } : menuStyles}\r\n        >\r\n          <DropDownList\r\n            name=\"Completed tasks\"\r\n            color={this.props.color}\r\n            listTask={this.props.board.completedTasks}\r\n            toggleTaskModal={this.toggleTaskModal}\r\n          />\r\n          <DropDownList\r\n            name=\"Unfulfilled tasks\"\r\n            color={this.props.color}\r\n            listTask={this.props.board.unfulfilledTasks}\r\n            toggleTaskModal={this.toggleTaskModal}\r\n          />\r\n        </section>\r\n\r\n        <Modal visible={this.state.selectedTask}>\r\n          <div\r\n            style={{\r\n              padding: '2em',\r\n              borderRadius: '.3em',\r\n              backgroundColor: '#080808',\r\n            }}\r\n          >\r\n            <Button arrFunctions={[() => this.toggleTaskModal(null)]}>\r\n              Close\r\n            </Button>\r\n            <div\r\n              style={{\r\n                padding: '2em 0 .5em',\r\n                borderBottom: '.1em solid #222',\r\n              }}\r\n            >\r\n              {/*taskItem[1] - full date now */}\r\n              {this.state.selectedTask ? this.state.selectedTask[1] : ''}\r\n            </div>\r\n            <div\r\n              style={{ padding: '3em 0 .5em', borderBottom: '.1em solid #222' }}\r\n            >\r\n              {/* taskItem[0] - text */}\r\n              {this.state.selectedTask ? this.state.selectedTask[0] : ''}\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </>\r\n    );\r\n  }\r\n\r\n  toggleTaskModal = (taskItem) => {\r\n    this.setState({\r\n      selectedTask: taskItem,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst columnStyles = {\r\n  padding: '1em',\r\n  margin: '1em 1%',\r\n  borderRadius: '.5em',\r\n  backgroundColor: '#111',\r\n  transition: '.25s',\r\n};\r\n\r\nexport default class Column extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hide: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div\r\n        onMouseMove={this.startHover}\r\n        onMouseLeave={this.endHover}\r\n        style={\r\n          this.props.active\r\n            ? {\r\n                ...columnStyles,\r\n                width: this.props.width,\r\n                minWidth: this.props.minWidth,\r\n                border: `.1em solid ${this.props.borderColor}`,\r\n                boxShadow: '0 .8em .7em #000',\r\n              }\r\n            : {\r\n                ...columnStyles,\r\n                width: this.props.width,\r\n                minWidth: this.props.minWidth,\r\n                border: '.1em solid transparent',\r\n              }\r\n        }\r\n      >\r\n        <button\r\n          onClick={this.toggleHideColumn}\r\n          style={{\r\n            padding: '.2em 0',\r\n            fontSize: '.8em',\r\n            border: 'none',\r\n            backgroundColor: 'transparent',\r\n            color: '#888',\r\n          }}\r\n        >\r\n          {this.state.hide ? 'Show' : 'Hide'}\r\n        </button>\r\n        <div\r\n          style={\r\n            this.state.hide\r\n              ? {\r\n                  height: '0',\r\n                  visibility: 'hidden',\r\n                  opacity: '0',\r\n                  transition: '.15s',\r\n                }\r\n              : { transition: '.15s' }\r\n          }\r\n        >\r\n          {this.props.children}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  toggleHideColumn = () => {\r\n    this.setState({\r\n      hide: !this.state.hide,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst taskWrapperStyles = {\r\n  cursor: 'grab',\r\n  margin: '.5em 0',\r\n  padding: '.4em',\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  borderRadius: '.3em',\r\n  color: '#000',\r\n};\r\n\r\nconst btnStyles = {\r\n  padding: '.2em',\r\n  border: 'none',\r\n  fontSize: '1.2em',\r\n  backgroundColor: 'transparent',\r\n  color: '#000',\r\n};\r\n\r\nexport default function Task({\r\n  index,\r\n  task,\r\n  color,\r\n  openTaskModal,\r\n  dragStartHandler,\r\n  dragLeaveHandler,\r\n  dragEndHandler,\r\n  dragOverHandler,\r\n  dropHandler,\r\n}) {\r\n  return (\r\n    <li\r\n      onDragStart={(event) => dragStartHandler(event, [index, task])}\r\n      onDragLeave={(event) => dragLeaveHandler(event)}\r\n      onDragEnd={(event) => dragEndHandler(event)}\r\n      onDragOver={(event) => dragOverHandler(event)}\r\n      onDrop={(event) => dropHandler(event, [index, task])}\r\n      draggable={true}\r\n      style={{\r\n        ...taskWrapperStyles,\r\n        backgroundColor: color,\r\n      }}>\r\n      <span\r\n        style={{\r\n          flex: '1',\r\n          overflowX: 'auto',\r\n          overflowY: 'hidden',\r\n        }}>\r\n        {task}\r\n      </span>\r\n      <button onClick={() => openTaskModal(index, task)} style={btnStyles}>\r\n        🖉\r\n      </button>\r\n    </li>\r\n  );\r\n}\r\n","import React from 'react';\r\n\r\nconst btnModalStyles = {\r\n  static: {\r\n    padding: '.4em',\r\n    border: 'none',\r\n    boxShadow: '0 0 .1em #000',\r\n    backgroundColor: '#242424',\r\n    color: '#fff',\r\n    transition: '.25s',\r\n  },\r\n\r\n  hover: {\r\n    color: '#000',\r\n  },\r\n};\r\n\r\nexport default class BtnModal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      hover: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const { arrFunctions, style, color, children } = this.props;\r\n\r\n    return (\r\n      <button\r\n        onMouseMove={this.startHover}\r\n        onMouseLeave={this.endHover}\r\n        onClick={() => arrFunctions.forEach((func) => func())}\r\n        style={\r\n          this.state.hover\r\n            ? {\r\n                ...btnModalStyles.static,\r\n                ...btnModalStyles.hover,\r\n                backgroundColor: color,\r\n                ...style,\r\n              }\r\n            : { ...btnModalStyles.static, ...style }\r\n        }\r\n      >\r\n        {children}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  startHover = () => {\r\n    this.setState({\r\n      hover: true,\r\n    });\r\n  };\r\n\r\n  endHover = () => {\r\n    this.setState({\r\n      hover: false,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Task from '../common/Task';\r\nimport Modal from '../common/Modal';\r\nimport BtnModal from '../common/BtnModal';\r\n\r\nconst wrapperModalContentStyles = {\r\n  padding: '1.2em',\r\n  display: 'grid',\r\n  gridTemplateColumns: 'repeat(7, 4em)',\r\n  gridTemplateRows: 'repeat(8, 1fr)',\r\n  fontSize: '1.4em',\r\n  borderRadius: '.4em',\r\n  backgroundColor: '#111',\r\n};\r\n\r\nconst taskModalFieldStyles = {\r\n  gridColumnStart: '1',\r\n  gridColumnEnd: '7',\r\n  gridRowStart: '2',\r\n  gridRowEnd: '9',\r\n  padding: '.4em',\r\n  resize: 'none',\r\n  borderRadius: '0 0 .3em .3em',\r\n  border: '.1em solid #151515',\r\n  boxShadow: 'inset 0 0 .4em #000',\r\n  backgroundColor: 'transparent',\r\n  color: '#fff',\r\n};\r\n\r\nexport default class ListTasks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      visibleTaskModal: false,\r\n      currentIndex: null,\r\n      currentText: '',\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <ul>\r\n          {this.props.tasks.map((task, index) => {\r\n            return (\r\n              <Task\r\n                task={task}\r\n                index={index}\r\n                color={this.props.color}\r\n                key={task + index}\r\n                openTaskModal={this.openTaskModal}\r\n                dragStartHandler={this.dragStartHandler}\r\n                dragLeaveHandler={this.dragLeaveHandler}\r\n                dragEndHandler={this.dragEndHandler}\r\n                dragOverHandler={this.dragOverHandler}\r\n                dropHandler={this.dropHandler}\r\n              />\r\n            );\r\n          })}\r\n        </ul>\r\n\r\n        <Modal visible={this.state.visibleTaskModal}>\r\n          <div style={wrapperModalContentStyles}>\r\n            <BtnModal\r\n              arrFunctions={[this.closeTaskModal]}\r\n              color={this.props.color}\r\n              style={{\r\n                gridColumnStart: '1',\r\n                gridColumnEnd: '7',\r\n                gridRowStart: '1',\r\n                gridRowEnd: '2',\r\n                borderRadius: '.3em .3em 0 0',\r\n              }}>\r\n              Close\r\n            </BtnModal>\r\n            <textarea\r\n              style={taskModalFieldStyles}\r\n              value={this.state.currentText}\r\n              onChange={(event) =>\r\n                this.changeCurrentTaskText(event.target.value)\r\n              }\r\n              onBlur={(event) => {\r\n                this.props.changeTask(\r\n                  this.state.currentIndex,\r\n                  event.target.value\r\n                );\r\n              }}\r\n            />\r\n            <div\r\n              style={{\r\n                gridColumnStart: '7',\r\n                gridColumnEnd: '8',\r\n                gridRowStart: '2',\r\n                gridRowEnd: '9',\r\n                display: 'flex',\r\n                flexDirection: 'column',\r\n              }}>\r\n              <BtnModal\r\n                color={this.props.color}\r\n                style={{ borderTopRightRadius: '.3em' }}\r\n                arrFunctions={[\r\n                  this.closeTaskModal,\r\n                  () =>\r\n                    this.props.addTaskToCompleted(\r\n                      this.state.currentIndex,\r\n                      this.state.currentText\r\n                    ),\r\n                ]}>\r\n                ✔\r\n              </BtnModal>\r\n              <BtnModal\r\n                color={this.props.color}\r\n                style={{ borderBottomRightRadius: '.3em' }}\r\n                arrFunctions={[\r\n                  this.closeTaskModal,\r\n                  () =>\r\n                    this.props.addTaskToUnfulfilled(\r\n                      this.state.currentIndex,\r\n                      this.state.currentText\r\n                    ),\r\n                ]}>\r\n                ⨯\r\n              </BtnModal>\r\n            </div>\r\n          </div>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  changeCurrentTaskText = (text) => {\r\n    this.setState({\r\n      currentText: text,\r\n    });\r\n  };\r\n\r\n  // TODO: ----------------------------------\r\n  /**\r\n   * @param  {event object} event\r\n   * @param  {array [taskIndex, taskText]} taskArr\r\n   */\r\n  dragStartHandler = (event, taskArr) => {\r\n    //\r\n  };\r\n\r\n  dragLeaveHandler = (event) => {\r\n    //\r\n  };\r\n\r\n  dragEndHandler = (event) => {\r\n    //\r\n  };\r\n\r\n  dragOverHandler = (event) => {\r\n    event.preventDefault();\r\n  };\r\n\r\n  /**\r\n   * @param  {event object} event\r\n   * @param  {array [taskIndex, taskText]} taskArr\r\n   */\r\n  dropHandler = (event, taskArr) => {\r\n    event.preventDefault();\r\n    console.log(event.target);\r\n    // * event.target <- drop task\r\n    // * task <- upper task\r\n    // this.props.updateTaskOrderInColumn()\r\n  };\r\n  // TODO: ----------------------------------\r\n\r\n  openTaskModal = (index, taskText) => {\r\n    this.setState({\r\n      visibleTaskModal: true,\r\n      currentIndex: index,\r\n      currentText: taskText,\r\n    });\r\n  };\r\n\r\n  closeTaskModal = () => {\r\n    this.setState({\r\n      visibleTaskModal: false,\r\n      currentTaskArr: [],\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst buttonStyle = {\r\n  cursor: 'pointer',\r\n  padding: '.4em',\r\n  border: 'none',\r\n  backgroundColor: 'transparent',\r\n};\r\n\r\nexport default function Button({ arrFunctions, children }) {\r\n  return (\r\n    <button\r\n      onClick={() => {\r\n        arrFunctions.forEach((func) => func());\r\n      }}\r\n      style={buttonStyle}\r\n    >\r\n      {children}\r\n    </button>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport Button from './Button';\r\n\r\nconst fieldStyles = {\r\n  resize: 'none',\r\n  width: '100%',\r\n  padding: '.4em',\r\n  border: 'none',\r\n  boxShadow: 'inset 0 0 .2em #111',\r\n  backgroundColor: 'transparent',\r\n};\r\n\r\nconst btnPlusTaskStyles = {\r\n  display: 'inline-block',\r\n  width: '100%',\r\n  height: '100%',\r\n  padding: '.2em',\r\n  borderRadius: 'inherit',\r\n  border: 'none',\r\n  backgroundColor: 'transparent',\r\n  transition: '.25s',\r\n};\r\n\r\nexport default class AddTask extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      text: '',\r\n      showField: false,\r\n      hover: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    const addTaskStyles = {\r\n      display: 'flex',\r\n      alignItems: 'center',\r\n      justifyContent: 'center',\r\n      borderRadius: '.4em',\r\n      backgroundColor: this.props.color,\r\n      transition: '.25s',\r\n    };\r\n\r\n    return (\r\n      <div style={addTaskStyles}>\r\n        {this.state.showField ? (\r\n          <div style={{ width: '100%' }}>\r\n            <textarea\r\n              style={fieldStyles}\r\n              onBlur={(event) => {\r\n                this.setTaskText(event.target.value);\r\n              }}\r\n              placeholder=\"...\"\r\n            ></textarea>\r\n            <div style={{ display: 'flex', justifyContent: 'space-between' }}>\r\n              <Button\r\n                arrFunctions={[\r\n                  () => {\r\n                    if (this.state.text) {\r\n                      this.props.addTask(this.props.place, this.state.text);\r\n                      this.toggleShowField();\r\n                    }\r\n                  },\r\n                  () => this.setTaskText(''),\r\n                ]}\r\n              >\r\n                Add\r\n              </Button>\r\n              <Button arrFunctions={[this.toggleShowField]}>⨯</Button>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          <button\r\n            onMouseMove={this.startHover}\r\n            onMouseLeave={this.endHover}\r\n            style={btnPlusTaskStyles}\r\n            onClick={this.toggleShowField}\r\n          >\r\n            {/* TODO: add constant for styles */}\r\n            <span\r\n              style={\r\n                this.state.hover\r\n                  ? {\r\n                      display: 'inline-block',\r\n                      transform: 'translateX(-.2em)',\r\n                      transition: '.25s',\r\n                    }\r\n                  : { display: 'inline-block', transition: '.25s' }\r\n              }\r\n            >\r\n              +\r\n            </span>{' '}\r\n            <span\r\n              style={\r\n                this.state.hover\r\n                  ? {\r\n                      display: 'inline-block',\r\n                      transform: 'translateX(.2em)',\r\n                      transition: '.25s',\r\n                    }\r\n                  : { display: 'inline-block', transition: '.25s' }\r\n              }\r\n            >\r\n              Task\r\n            </span>\r\n          </button>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n\r\n  setTaskText = (text) => {\r\n    this.setState({\r\n      text,\r\n    });\r\n  };\r\n\r\n  startHover = () => {\r\n    this.setState({\r\n      hover: true,\r\n    });\r\n  };\r\n\r\n  endHover = () => {\r\n    this.setState({\r\n      hover: false,\r\n    });\r\n  };\r\n\r\n  toggleShowField = () => {\r\n    this.setState({\r\n      showField: !this.state.showField,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Column from '../common/Column';\r\nimport Title from '../common/Title';\r\nimport ListTasks from './ListTasks';\r\nimport AddTask from '../common/AddTask/AddTask';\r\n\r\nconst daysColumnsStyles = {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst daysOfWeek = [\r\n  'Monday',\r\n  'Tuesday',\r\n  'Wednesday',\r\n  'Thursday',\r\n  'Friday',\r\n  'Saturday',\r\n  'Sunday',\r\n];\r\nexport default class Days extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section style={daysColumnsStyles}>\r\n        {daysOfWeek.map((day, index) => {\r\n          return (\r\n            <Column\r\n              minWidth=\"12em\"\r\n              width=\"12%\"\r\n              active={new Date().getDay() - 1 === index}\r\n              borderColor={this.props.board.color}\r\n              title={day}\r\n              key={day + index}\r\n            >\r\n              <Title padding=\"1rem 0\" size=\"1.4em\">\r\n                {day}\r\n              </Title>\r\n\r\n              <ListTasks\r\n                color={this.props.board.color}\r\n                tasks={this.props.board.days[day]}\r\n                addTaskToCompleted={(taskIndex, task) => {\r\n                  this.props.addTaskToCompleted(['days', day, taskIndex, task]);\r\n                }}\r\n                addTaskToUnfulfilled={(taskIndex, task) => {\r\n                  this.props.addTaskToUnfulfilled([\r\n                    'days',\r\n                    day,\r\n                    taskIndex,\r\n                    task,\r\n                  ]);\r\n                }}\r\n                updateTaskOrderInColumn={this.props.updateTaskOrderInColumn}\r\n                changeTask={(taskIndex, newTask) =>\r\n                  this.props.changeTask(['days', day, taskIndex, newTask])\r\n                }\r\n              />\r\n\r\n              <AddTask\r\n                place={day}\r\n                addTask={this.props.addTaskToDay}\r\n                color={this.props.board.color}\r\n              />\r\n            </Column>\r\n          );\r\n        })}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Column from '../common/Column';\r\nimport Title from '../common/Title';\r\nimport ListTasks from './ListTasks';\r\nimport AddTask from '../common/AddTask/AddTask';\r\n\r\nconst worksColumnsStyles = {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'flex-start',\r\n  justifyContent: 'center',\r\n};\r\n\r\nconst workStages = ['ToDo', 'Doing', 'Done'];\r\nclass Works extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section style={worksColumnsStyles}>\r\n        {workStages.map((stage, index) => {\r\n          return (\r\n            <Column\r\n              minWidth=\"12em\"\r\n              width=\"30.5%\"\r\n              title={stage}\r\n              key={stage + index}\r\n            >\r\n              <Title padding=\"1rem 0\" size=\"1.4em\">\r\n                {stage}\r\n              </Title>\r\n\r\n              <ListTasks\r\n                color={this.props.board.color}\r\n                tasks={this.props.board.works[stage]}\r\n                addTaskToCompleted={(taskIndex, task) => {\r\n                  this.props.addTaskToCompleted([\r\n                    'works',\r\n                    stage,\r\n                    taskIndex,\r\n                    task,\r\n                  ]);\r\n                }}\r\n                addTaskToUnfulfilled={(taskIndex, task) => {\r\n                  this.props.addTaskToUnfulfilled([\r\n                    'works',\r\n                    stage,\r\n                    taskIndex,\r\n                    task,\r\n                  ]);\r\n                }}\r\n                updateTaskOrderInColumn={this.props.updateTaskOrderInColumn}\r\n                changeTask={(taskIndex, newTask) =>\r\n                  this.props.changeTask(['works', stage, taskIndex, newTask])\r\n                }\r\n              />\r\n\r\n              <AddTask\r\n                place={stage}\r\n                addTask={this.props.addTaskToStage}\r\n                color={this.props.board.color}\r\n              />\r\n            </Column>\r\n          );\r\n        })}\r\n      </section>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Works;\r\n","import React from 'react';\r\nimport BtnToggle from '../common/BtnToggle';\r\nimport Title from '../common/Title';\r\nimport Menu from './Menu';\r\nimport Days from './Days';\r\nimport Works from './Works';\r\nimport '../componentStyles/board.css';\r\n\r\nconst svgLeftArrow = (\r\n  <svg\r\n    style={{\r\n      width: '1rem',\r\n      heigh: '1rem',\r\n      marginRight: '.5rem',\r\n      fill: '#fff',\r\n    }}\r\n    version='1.1'\r\n    xmlns='http://www.w3.org/2000/svg'\r\n    x='0px'\r\n    y='0px'\r\n    viewBox='0 0 492 492'>\r\n    <path\r\n      d='M198.608,246.104L382.664,62.04c5.068-5.056,7.856-11.816,7.856-19.024c0-7.212-2.788-13.968-7.856-19.032l-16.128-16.12\r\n   C361.476,2.792,354.712,0,347.504,0s-13.964,2.792-19.028,7.864L109.328,227.008c-5.084,5.08-7.868,11.868-7.848,19.084\r\n   c-0.02,7.248,2.76,14.028,7.848,19.112l218.944,218.932c5.064,5.072,11.82,7.864,19.032,7.864c7.208,0,13.964-2.792,19.032-7.864\r\n   l16.124-16.12c10.492-10.492,10.492-27.572,0-38.06L198.608,246.104z'\r\n    />\r\n  </svg>\r\n);\r\n\r\nexport default class Board extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      daysVisible: true,\r\n      menuVisible: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='board'>\r\n        <div className='board__header'>\r\n          <BtnToggle arrFunctions={[this.props.backToBoards]}>\r\n            {svgLeftArrow}\r\n            <Title>{this.props.board.title}</Title>\r\n          </BtnToggle>\r\n          <BtnToggle\r\n            arrFunctions={[() => this.setVisibleDays(true)]}\r\n            active={this.state.daysVisible}>\r\n            Days\r\n          </BtnToggle>\r\n          <BtnToggle\r\n            arrFunctions={[() => this.setVisibleDays(false)]}\r\n            active={!this.state.daysVisible}>\r\n            Works\r\n          </BtnToggle>\r\n          <BtnToggle\r\n            arrFunctions={[this.toggleVisibleMenu]}\r\n            active={this.state.menuVisible}>\r\n            ☰\r\n          </BtnToggle>\r\n        </div>\r\n\r\n        <Menu\r\n          board={this.props.board}\r\n          visible={this.state.menuVisible}\r\n          color={this.props.board.color}\r\n        />\r\n\r\n        <div style={{ paddingLeft: '3vw' }}>\r\n          {this.state.daysVisible ? (\r\n            <Days {...this.props} />\r\n          ) : (\r\n            <Works {...this.props} />\r\n          )}\r\n        </div>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  setVisibleDays = (bool) => {\r\n    this.setState({\r\n      daysVisible: bool,\r\n    });\r\n  };\r\n\r\n  toggleVisibleMenu = () => {\r\n    this.setState({\r\n      menuVisible: !this.state.menuVisible,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\n\r\nconst boardItemStyles = {\r\n  static: {\r\n    cursor: 'pointer',\r\n    maxWidth: '20vw',\r\n    margin: '.7em',\r\n    marginLeft: '0',\r\n    padding: '1em',\r\n    overflow: 'auto',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    borderRadius: '.3em',\r\n    transition: '.25s',\r\n  },\r\n\r\n  hover: {\r\n    color: '#000',\r\n  },\r\n};\r\n\r\nexport default class BoardItem extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      boardItemHover: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <li\r\n        onMouseEnter={this.startItemHover}\r\n        onMouseLeave={this.endItemHover}\r\n        className={this.props.destroyMode ? 'destroy-item' : ''}\r\n        onClick={() => {\r\n          this.props.destroyMode\r\n            ? this.props.deleteBoard(\r\n                this.props.item.title + this.props.item.color\r\n              )\r\n            : this.props.openBoard(this.props.index);\r\n        }}\r\n        style={\r\n          this.state.boardItemHover\r\n            ? {\r\n                ...boardItemStyles.static,\r\n                ...boardItemStyles.hover,\r\n                transform: 'translateY(-2px)',\r\n                border: `.1em solid ${this.props.item.color}`,\r\n                backgroundColor: this.props.item.color,\r\n              }\r\n            : {\r\n                ...boardItemStyles.static,\r\n                border: `.1em solid ${this.props.item.color}`,\r\n              }\r\n        }\r\n      >\r\n        {this.props.item.title}\r\n        <span className=\"color\" hidden>\r\n          {this.props.item.color}\r\n        </span>\r\n      </li>\r\n    );\r\n  }\r\n\r\n  startItemHover = () => {\r\n    this.setState({\r\n      boardItemHover: true,\r\n    });\r\n  };\r\n\r\n  endItemHover = () => {\r\n    this.setState({\r\n      boardItemHover: false,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport Button from '../common/Button';\r\nimport BoardItem from '../common/BoardItem';\r\n\r\nconst listHeaderStyles = {\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n  alignItems: 'center',\r\n};\r\n\r\nconst boardsListStyles = {\r\n  margin: '1em 0',\r\n  display: 'flex',\r\n  flexWrap: 'wrap',\r\n};\r\n\r\nexport default class ListBoards extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section>\r\n        <div style={listHeaderStyles}>\r\n          <div\r\n            style={{\r\n              width: '11em',\r\n              display: 'flex',\r\n              flexWrap: 'wrap',\r\n              justifyContent: 'space-between',\r\n            }}\r\n          >\r\n            <Button\r\n              block={this.props.destroyMode}\r\n              arrFunctions={[this.props.toggleOptions]}\r\n            >\r\n              Add\r\n            </Button>\r\n            <Button arrFunctions={[this.props.toggleDestroyMode]}>\r\n              Delete\r\n            </Button>\r\n          </div>\r\n          <span style={{ flex: '1', textAlign: 'right', fontSize: '1.2em' }}>\r\n            Created: {this.props.boards.length}\r\n          </span>\r\n        </div>\r\n\r\n        <ul style={boardsListStyles}>\r\n          {this.props.boards.map((item, index) => {\r\n            return (\r\n              <BoardItem\r\n                item={item}\r\n                index={index}\r\n                openBoard={this.props.openBoard}\r\n                deleteBoard={this.props.deleteBoard}\r\n                destroyMode={this.props.destroyMode}\r\n                key={item.title + item.color}\r\n              ></BoardItem>\r\n            );\r\n          })}\r\n        </ul>\r\n      </section>\r\n    );\r\n  }\r\n}\r\n","import React from 'react';\r\nimport Container from '../common/Container';\r\nimport Title from '../common/Title';\r\nimport Modal from '../common/Modal';\r\nimport Button from '../common/Button';\r\nimport CreateBoard from './CreateBoard';\r\nimport Board from './Board';\r\nimport ListBoards from './ListBoards';\r\nimport '../componentStyles/userBoards.css';\r\n\r\nexport default class UserBoards extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      destroyMode: false,\r\n      modalVisible: false,\r\n      optionsVisible: false,\r\n    };\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <section className='user-boards-container'>\r\n        {this.props.currentBoard ? (\r\n          <Board\r\n            updateTaskOrderInColumn={this.props.updateTaskOrderInColumn}\r\n            addTaskToCompleted={this.props.addTaskToCompleted}\r\n            addTaskToUnfulfilled={this.props.addTaskToUnfulfilled}\r\n            changeTask={this.props.changeTask}\r\n            addTaskToStage={this.props.addTaskToStage}\r\n            addTaskToDay={this.props.addTaskToDay}\r\n            backToBoards={this.backToBoards}\r\n            board={this.props.currentBoard}\r\n          />\r\n        ) : (\r\n          <div\r\n            style={{\r\n              minWidth: '27em',\r\n              width: '60%',\r\n            }}>\r\n            <Title underline padding='1em 0' size='4em'>\r\n              Track of your tasks\r\n            </Title>\r\n\r\n            <Container>\r\n              {this.state.optionsVisible ? (\r\n                <CreateBoard\r\n                  toggleOptions={this.toggleOptions}\r\n                  createBoard={this.createBoard}\r\n                />\r\n              ) : (\r\n                <div style={{ width: '100%' }}>\r\n                  <Title padding='1em 0' size='2.4em'>\r\n                    Your boards\r\n                  </Title>\r\n                  <ListBoards\r\n                    toggleOptions={this.toggleOptions}\r\n                    toggleDestroyMode={this.toggleDestroyMode}\r\n                    openBoard={this.openBoard}\r\n                    deleteBoard={this.deleteBoard}\r\n                    destroyMode={this.state.destroyMode}\r\n                    boards={this.props.boards}\r\n                  />\r\n                </div>\r\n              )}\r\n            </Container>\r\n          </div>\r\n        )}\r\n        <Modal visible={this.state.modalVisible}>\r\n          <div style={{ textAlign: 'center' }}>\r\n            <Button arrFunctions={[this.toggleModal]}>Close</Button>\r\n            <p\r\n              style={{\r\n                maxWidth: '25em',\r\n                textAlign: 'center',\r\n                fontSize: '1.6em',\r\n              }}>\r\n              Sorry but you cannot have boards with the same name and color\r\n            </p>\r\n          </div>\r\n        </Modal>\r\n      </section>\r\n    );\r\n  }\r\n\r\n  toggleOptions = () => {\r\n    this.setState({\r\n      optionsVisible: !this.state.optionsVisible,\r\n    });\r\n  };\r\n\r\n  createBoard = (newBoard) => {\r\n    let coincidence = false;\r\n\r\n    this.props.boards.forEach((board) => {\r\n      if (board.title === newBoard.title && board.color === newBoard.color) {\r\n        coincidence = true;\r\n      }\r\n    });\r\n\r\n    if (!coincidence) {\r\n      this.props.addBoard(newBoard);\r\n      this.backToBoards();\r\n    } else {\r\n      this.toggleModal();\r\n    }\r\n  };\r\n\r\n  deleteBoard = (key) => {\r\n    this.props.removeBoard(key);\r\n  };\r\n\r\n  toggleDestroyMode = () => {\r\n    this.setState({\r\n      destroyMode: !this.state.destroyMode,\r\n    });\r\n  };\r\n\r\n  openBoard = (index) => {\r\n    this.props.chooseBoard(index);\r\n  };\r\n\r\n  backToBoards = () => {\r\n    this.props.chooseBoard(null);\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState({\r\n      modalVisible: !this.state.modalVisible,\r\n    });\r\n  };\r\n}\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport {\r\n  addBoard,\r\n  removeBoard,\r\n  chooseBoard,\r\n} from './store/actionCreators/boardActionCreators';\r\nimport {\r\n  changeTask,\r\n  addTaskToDay,\r\n  addTaskToStage,\r\n  addTaskToCompleted,\r\n  addTaskToUnfulfilled,\r\n  updateTaskOrderInColumn,\r\n} from './store/actionCreators/taskActionCreators';\r\nimport UserBoards from './components/UserBoards';\r\n\r\nclass App extends React.Component {\r\n  render() {\r\n    const {\r\n      objBoards,\r\n      addBoardAction,\r\n      removeBoardAction,\r\n      chooseBoardAction,\r\n      changeTaskAction,\r\n      addTaskToDayAction,\r\n      addTaskToStageAction,\r\n      addTaskToCompletedAction,\r\n      addTaskToUnfulfilledAction,\r\n      updateTaskOrderInColumnAction,\r\n    } = this.props;\r\n\r\n    return (\r\n      <div style={{ position: 'relative', minHeight: '100vh' }}>\r\n        <UserBoards\r\n          boards={objBoards.boards}\r\n          currentBoard={objBoards.currentBoard}\r\n          addBoard={addBoardAction}\r\n          removeBoard={removeBoardAction}\r\n          chooseBoard={chooseBoardAction}\r\n          changeTask={changeTaskAction}\r\n          addTaskToDay={addTaskToDayAction}\r\n          addTaskToStage={addTaskToStageAction}\r\n          addTaskToCompleted={addTaskToCompletedAction}\r\n          addTaskToUnfulfilled={addTaskToUnfulfilledAction}\r\n          updateTaskOrderInColumn={updateTaskOrderInColumnAction}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (store) => {\r\n  return {\r\n    objBoards: store.objBoards,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  addBoardAction: (board) => dispatch(addBoard(board)),\r\n  removeBoardAction: (key) => dispatch(removeBoard(key)),\r\n  chooseBoardAction: (index) => dispatch(chooseBoard(index)),\r\n  changeTaskAction: (array) => dispatch(changeTask(array)),\r\n  addTaskToDayAction: (day, task) => dispatch(addTaskToDay(day, task)),\r\n  addTaskToStageAction: (stage, task) => dispatch(addTaskToStage(stage, task)),\r\n  addTaskToCompletedAction: (array) => dispatch(addTaskToCompleted(array)),\r\n  addTaskToUnfulfilledAction: (array) => dispatch(addTaskToUnfulfilled(array)),\r\n  updateTaskOrderInColumnAction: (taskObj) =>\r\n    dispatch(updateTaskOrderInColumn(taskObj)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Provider } from 'react-redux';\r\nimport store from './store/store';\r\nimport 'normalize.css';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}